{"version":3,"sources":["Nav.js","SearchPage.js","Movie.js","MovieRow.js","Pagination.js","MovieInfo.js","Dashboard.js","Base.js","authAction.js","Login.js","SignUp.js","App.js","serviceWorker.js","authReducer.js","rootReducer.js","index.js"],"names":["connect","state","props","console","log","className","id","href","to","onClick","logOutUser","SearchPage","action","onSubmit","handleSubmit","placeholder","getCurrSearch","type","onChange","handleChange","required","Movie","image","alt","src","style","width","height","title","length","substr","class","viewMovieInfo","movieId","cursor","paddingTop","size","MovieRow","movies","map","movie","i","key","MovieRate","vote_average","MovieTotalVote","vote_count","poster_path","Pagination","pageLink","active","currentPage","push","nextPage","pages","MovieInfo","currMovie","closeMovieInfo","release_date","substring","split","concat","join","overview","name","editing","renderStarIcon","starCount","value","Dashboard","e","preventDefault","fetch","apiKey","searchTerm","then","data","json","setState","results","totalResults","total_results","currSearch","target","pageNumber","filteredMovie","filter","newCurrMovie","username","numberPages","Math","floor","this","Component","firebase","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","signIn","credentials","dispatch","getState","getFirebase","getFirestore","auth","signInWithEmailAndPassword","email","password","catch","err","Login","error","authError","color","message","autoComplete","creds","SignUp","marginLeft","children","App","user","bind","exact","path","component","Boolean","window","location","hostname","match","initState","authReducer","rootReducer","combineReducers","firestore","firestoreReducer","firebaseReducer","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7617dc5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Nav.css\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\n\n\nconst Nav = (props) => {\n\n    console.log(props)\n     function UserLinks(){\n       return (\n         <ul className=\"right hide-on-med-and-down\">\n           <li>\n             <a href=\"#!\" onClick={props.logOutUser}>\n               Logout\n             </a>\n           </li>\n         </ul>\n       );\n     }\n\n     function GoustLinks () {\n       return (\n         <ul className=\"right hide-on-med-and-down\">\n           <li>\n             <NavLink to=\"/Login\">Login</NavLink>\n           </li>\n           <li>\n             <NavLink to=\"/SignUp\">SignUP</NavLink>\n           </li>\n           <li>\n\n           </li>\n         </ul>\n       );\n     }\n   \n  return (\n    <nav className=\"navbar navbar-default\" id=\"root\">\n      <div className=\"nav-wrapper\">\n        <a href=\"Dashboard\" className=\"brand-logo\">\n          <i className=\"fa fa-film fx-5x\"></i>\n          Moviepedia\n        </a>\n        <ul className=\"left hide-on-med-and-down\">\n          <li>\n            <a href=\"about\">About</a>\n          </li>\n          <li>\n            <NavLink to=\"/Dashboard\">Search</NavLink>\n          </li>\n        </ul>\n        { UserLinks()}\n        { GoustLinks()}\n      </div>\n    </nav>\n\n  );\n}\n\nconst mapStateToProps = (state)=>{\n  return{\n\n  }\n}\n\nexport default connect(null,mapStateToProps)(Nav);\n\n\n\n\n/*\nlast good\n\n\nconst Nav = (props) => {\n\n    console.log(props)\n     function UserLinks(){\n       return (\n         <ul className=\"right hide-on-med-and-down\">\n           <li>\n             <a href=\"#!\" onClick={props.logOutUser}>\n               Logout\n             </a>\n           </li>\n         </ul>\n       );\n     }\n\n     function GoustLinks () {\n       return (\n         <ul className=\"right hide-on-med-and-down\">\n           <li>\n             <NavLink to=\"/Login\">Login</NavLink>\n           </li>\n           <li>\n             <NavLink to=\"/SignUp\">SignUP</NavLink>\n           </li>\n           <li>\n\n           </li>\n         </ul>\n       );\n     }\n   \n  return (\n    <nav className=\"navbar navbar-default\" id=\"root\">\n      <div className=\"nav-wrapper\">\n        <a href=\"Dashboard\" className=\"brand-logo\">\n          <i className=\"fa fa-film fx-5x\"></i>\n          Moviepedia\n        </a>\n        <ul className=\"left hide-on-med-and-down\">\n          <li>\n            <a href=\"about\">About</a>\n          </li>\n          <li>\n            <NavLink to=\"/Dashboard\">Search</NavLink>\n          </li>\n        </ul>\n        { UserLinks()}\n        { GoustLinks()}\n      </div>\n    </nav>\n\n  );\n}\n\nexport default withRouter(Nav);\n\n\n*/\n","import React from 'react';\nimport \"./SearchPage.css\";\n\nconst SearchPage = (props) => {\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <section className=\"col s4 offset-s4\">\n            <form\n              action=\"\"\n              onSubmit={props.handleSubmit}\n              placeholder=\"search movie\"\n            >\n              <div className=\"input-field\">\n                <input\n                  className=\"search-bar\"\n                  placeholder={props.getCurrSearch}\n                  type=\"text\"\n                  onChange={props.handleChange}\n                  required\n                />\n              </div>\n            </form>\n          </section>\n        </div>\n      </div>\n    );\n}\n\nexport default SearchPage;","import React from 'react';\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\n\n\n\nconst Movie = (props) => {\n    return (\n      <div className=\"col s12 m6 l4\">\n        <div className=\"card\">\n          <div className=\"card-image waves-effect waves-block waves-light\">\n            {props.image == null ? (\n              <img\n                alt=\"card\"\n                src=\"https://www.freeiconspng.com/uploads/no-image-icon-11.PNG\"\n                style={{ width: \"100%\", height: 300 }}\n              />\n            ) : (\n              <img\n                alt=\"card\"\n                src={`http://image.tmdb.org/t/p/w185${props.image}`}\n                style={{ width: \"100%\", height: 300 }}\n              />\n            )}\n          </div>\n          <span className=\"card-title\">\n            {props.title.length < 20 ? (\n              <div>{props.title}</div>\n            ) : (\n              <div>{props.title.substr(0, 20)}</div>\n            )}\n          </span>\n          <div className=\"card-content\">\n            <p>\n              <i\n                class=\"fa fa-info-circle fa-2x\"\n                onClick={() => props.viewMovieInfo(props.movieId)}\n                style={{ cursor: \"pointer\", paddingTop: 5 }}\n              >\n                <font size=\"5\">details</font>\n              </i>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Movie;","import React  from 'react';\nimport Movie from './Movie.js';\nimport './MovieRow.css';\n\n\n\nconst MovieRow = (props) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col s12\">\n          {props.movies.map((movie, i) => {\n            return (\n              <Movie\n                key={i}\n                viewMovieInfo={props.viewMovieInfo}\n                movieId={movie.id}\n                MovieRate={movie.vote_average}\n                MovieTotalVote={movie.vote_count}\n                image={movie.poster_path}\n                title={movie.title}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieRow;","import React from \"react\";\n\nconst Pagination = (props) => {\n    const pageLink = []\n    for (let i=1 ; i<= props.pages + 1 ; i++){\n        let active = props.currentPage === i ? 'active' : '' \n        pageLink.push(\n          <li\n            className={`waves-effect ${active}`}\n            key={i}\n            onClick={() => props.nextPage(i)} >\n            <a href=\"!#\">{i}</a>\n          </li>\n        )\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <ul className=\"pagination\">\n            {props.currentPage > 1 ? \n            (<li\n                className={`waves-effect`}\n                onClick={() => props.nextPage(props.currentPage - 1)}>\n                <a href=\"!#\">prev</a>\n              </li>) : (\"\")}\n            {pageLink}\n            {props.currentPage < props.pages + 1 ? \n            ( <li\n                className={`waves-effect`}\n                onClick={() => props.nextPage(props.currentPage + 1)}>\n                <a href=\"!#\">next</a>\n              </li>) : (\"\")}\n          </ul>\n        </div>\n      </div>\n    );\n}\nexport default Pagination;","import React from 'react';\nimport \"./MovieInfo.css\";\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport StarRatingComponent from \"react-star-rating-component\";\n\n\n\n\nconst MovieInfo = (props) => {\n\n    return (\n      <div className=\"InfoContainer\">\n        <div className=\"row\">\n          <div className=\"col s12 m4\">\n            {props.currMovie.poster_path == null ? (\n              <img\n                alt=\"card\"\n                src=\"https://www.freeiconspng.com/uploads/no-image-icon-11.PNG\"\n                style={{ width: \"100%\", height: 300 }}\n              />\n            ) : (\n              <img\n                alt=\"card\"\n                src={`http://image.tmdb.org/t/p/w185${props.currMovie.poster_path}`}\n                style={{ width: \"100%\", height: 300 }}\n              />\n            )}\n\n            <div\n              className=\"row\"\n              onClick={props.closeMovieInfo}\n              style={{ cursor: \"pointer\", paddingTop: 5 }}\n            >\n              <i className=\"fa fa-arrow-left fa-2x\"> Go back</i>\n            </div>\n          </div>\n          <div className=\"col s12 m8\">\n            <div className=\"info-container\">\n              <p>\n                <font size=\"50\">{props.currMovie.title}</font> \n              </p>\n              <p>\n                {\" Release: \"}\n                {props.currMovie.release_date\n                  .substring(5)\n                  .split(\"-\")\n                  .concat(props.currMovie.release_date.substring(0, 4))\n                  .join(\"/\")}\n              </p>\n              <p> {props.currMovie.overview}</p>\n              <p>\n                <StarRatingComponent\n                  name=\"rateMovie\"\n                  editing={false}\n                  renderStarIcon={() => (\n                    <span>\n                      <i class=\"fa fa-star fa-3x\"></i>\n                    </span>\n                  )}\n                  starCount={5}\n                  value={props.currMovie.vote_average / 2}\n                />\n                <div>Number of vote: {props.currMovie.vote_count}</div>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n\n\n\nexport default MovieInfo; ","import React, { Component} from \"react\";\n\n\nimport './App.css';\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\n\nimport SearchPage from './SearchPage.js';\nimport MovieRow from './MovieRow.js';\nimport Pagination from './Pagination.js';\nimport MovieInfo from './MovieInfo.js';\nimport {connect} from 'react-redux'\n\nclass Dashboard extends Component {\n  constructor() {\n    //add props???\n    super(); ///too\n    this.state = {\n      movies: [],\n      searchTerm: \"\",\n      currSearch: \"Search movie\",\n      totalResults: -1,\n      currentPage: 1,\n      currMovie: null,\n      username:\"\"\n    };\n    this.apiKey = \"b58ad972ea35cacd552f03dcb6497021\";\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchTerm}`\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        this.setState({\n          movies: [...data.results],\n          totalResults: data.total_results,\n          currSearch: this.state.searchTerm,\n        });\n      });\n  };\n\n  getCurrSearch = () => {\n    return this.state.currSearch;\n  };\n\n  handleChange = (e) => {\n    //e.preventDefault();\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  nextPage = (pageNumber) => {\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchTerm}&page=${pageNumber}`\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        this.setState({ movies: [...data.results], currentPage: pageNumber });\n      });\n  };\n\n  viewMovieInfo = (id) => {\n    const filteredMovie = this.state.movies.filter((movie) => movie.id === id);\n    const newCurrMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n    this.setState({ currMovie: newCurrMovie });\n  };\n\n  closeMovieInfo = () => {\n    this.setState({ currMovie: null });\n  };\n\n\n  render() {\n    const numberPages = Math.floor(this.state.totalResults / 20);\n    return (\n      <div>\n        {this.state.currMovie == null ? (\n          <div>\n            <SearchPage\n              handleSubmit={this.handleSubmit}\n              handleChange={this.handleChange}\n              getCurrSearch={this.getCurrSearch()}\n            />\n            {this.state.totalResults === 0 ? (\n              <div className=\"EmptySearchContainer\">\n                <div className=\"row\">\n                  <div className=\"sorryDiv\">Sorry,</div>\n                  <div>We couldn't find any results matching</div>\n                  <div>{'\"' + this.state.currSearch + '\"'}</div>\n                </div>\n              </div>\n            ) : (\n              <MovieRow\n                viewMovieInfo={this.viewMovieInfo}\n                movies={this.state.movies}\n              />\n            )}\n          </div>\n        ) : (\n          <MovieInfo\n            currMovie={this.state.currMovie}\n            closeMovieInfo={this.closeMovieInfo}\n          />\n        )}\n        {this.state.totalResults > 20 && this.state.currMovie == null ? (\n          <Pagination\n            pages={numberPages}\n            nextPage={this.nextPage}\n            currentPage={this.state.currentPage}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\n\nexport default Dashboard;\n\n\n\n/*lastttt\n\nimport React, { Component} from \"react\";\n\n\nimport './App.css';\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\n\nimport SearchPage from './SearchPage.js';\nimport MovieRow from './MovieRow.js';\nimport Pagination from './Pagination.js';\nimport MovieInfo from './MovieInfo.js';\n\nclass Dashboard extends Component {\n  constructor() {\n    //add props???\n    super(); ///too\n    this.state = {\n      movies: [],\n      searchTerm: \"\",\n      currSearch: \"Search movie\",\n      totalResults: -1,\n      currentPage: 1,\n      currMovie: null,\n      username:\"\"\n    };\n    this.apiKey = \"b58ad972ea35cacd552f03dcb6497021\";\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchTerm}`\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        this.setState({\n          movies: [...data.results],\n          totalResults: data.total_results,\n          currSearch: this.state.searchTerm,\n        });\n      });\n  };\n\n  getCurrSearch = () => {\n    return this.state.currSearch;\n  };\n\n  handleChange = (e) => {\n    //e.preventDefault();\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  nextPage = (pageNumber) => {\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchTerm}&page=${pageNumber}`\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        this.setState({ movies: [...data.results], currentPage: pageNumber });\n      });\n  };\n\n  viewMovieInfo = (id) => {\n    const filteredMovie = this.state.movies.filter((movie) => movie.id === id);\n    const newCurrMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n    this.setState({ currMovie: newCurrMovie });\n  };\n\n  closeMovieInfo = () => {\n    this.setState({ currMovie: null });\n  };\n\n\n  render() {\n    const numberPages = Math.floor(this.state.totalResults / 20);\n    return (\n      <div>\n        {this.state.currMovie == null ? (\n          <div>\n            <SearchPage\n              handleSubmit={this.handleSubmit}\n              handleChange={this.handleChange}\n              getCurrSearch={this.getCurrSearch()}\n            />\n            {this.state.totalResults === 0 ? (\n              <div className=\"EmptySearchContainer\">\n                <div className=\"row\">\n                  <div className=\"sorryDiv\">Sorry,</div>\n                  <div>We couldn't find any results matching</div>\n                  <div>{'\"' + this.state.currSearch + '\"'}</div>\n                </div>\n              </div>\n            ) : (\n              <MovieRow\n                viewMovieInfo={this.viewMovieInfo}\n                movies={this.state.movies}\n              />\n            )}\n          </div>\n        ) : (\n          <MovieInfo\n            currMovie={this.state.currMovie}\n            closeMovieInfo={this.closeMovieInfo}\n          />\n        )}\n        {this.state.totalResults > 20 && this.state.currMovie == null ? (\n          <Pagination\n            pages={numberPages}\n            nextPage={this.nextPage}\n            currentPage={this.state.currentPage}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\n\nexport default Dashboard;\n\n\n\n\n*/","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport \"firebase/auth\";\n\nconst app = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n};\n\nfirebase.initializeApp(app);\nfirebase.firestore().settings({timestampsInSnapshots:true})\n\nexport default firebase;\n\n\n\n\n/*last\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport \"firebase/auth\";\n\nconst app = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n};\n\nfirebase.initializeApp(app);\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n------------\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n});\n\n\n\nexport default app;\n*/","export const signIn=(credentials)=>{\n    return (dispatch, getState,{getFirebase, getFirestore})=>{\n    const firebase=getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: 'login_success' });\n      })\n      .catch((err) => {\n        dispatch({ type: 'login_error', err });\n      });\n}\n}","import React, {Component} from \"react\";\nimport firebase from \"./Base.js\";\nimport \"./MovieInfo.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"./authAction.js\";\n\n\n\nclass Login extends Component {\n    state = {\n      email: \"\",\n      password: \"\",\n    };\n  \n  handleChange=(e)=> {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit=(e)=> {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n\n  render() {\n    const { email, password, error } = this.state;\n    const {authError}=this.error;\n    return (\n      <div className=\"InfoContainer\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <font size=\"10\" color=\"red\">\n              Login\n            </font>\n            <div></div>\n            {error && <p className=\"error-message\">{error.message}</p>}\n\n            <label>Email address</label>\n            <input\n              value={email}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              placeholder=\"Enter email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              value={password}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"on\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Login\n          </button>\n          <p>\n            Don't have an account yet?\n            <NavLink to=\"/SignUp\"> Sign UP</NavLink>\n          </p>\n          {authError? <p>{authError}</p> : null}\n        </form>\n      </div>\n    );\n  }\n}const mapStateToProps= ( state)=>{\n  return {\n    authError:state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\n/**\n\n\nimport React, {Component} from \"react\";\nimport firebase from \"./Base.js\";\nimport \"./MovieInfo.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"./authAction.js\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: null\n    };\n  }\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n   login(e) {\n    e.preventDefault();\n    const { email, password } = this.state;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        this.props.history.push(\"/\");\n        console.log(this.props);\n\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n  }\n\n\n  render() {\n\t\tconst { email, password, error } = this.state;\n    return (\n      <div className=\"InfoContainer\">\n        <form onSubmit={this.login}>\n          <div className=\"form-group\">\n            <font size=\"10\" color=\"red\">\n              Login\n            </font>\n            <div></div>\n            {error && <p className=\"error-message\">{error.message}</p>}\n\n            <label>Email address</label>\n            <input\n              value={email}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              placeholder=\"Enter email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              value={password}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"on\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n          >\n            Login\n          </button>\n          <p>\n            Don't have an account yet?\n            <NavLink to=\"/SignUp\"> Sign UP</NavLink>\n          </p>\n        </form>\n      </div>\n    );\n  }\n\n}\nexport default Login;\n\n\n\n */","import React, { Component } from \"react\";\nimport firebase from \"./Base\";\nimport \"./MovieInfo.css\";\nimport \"firebase/auth\";\nimport { NavLink } from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {signIn} from \"./authAction.js\";\n\n\nclass SignUp extends Component {\n  state = {\n      email: \"\",\n      password: \"\",\n    }\n  \n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit=(e)=> {\n    e.preventDefault();\n    this.props.signIn(this.state);\n\n  }\n\n  render() {\n        const { authError } = this.props;\n\n    return (\n      <div className=\"InfoContainer\">\n        <form>\n          <div className=\"form-group\">\n            <font size=\"10\" color=\"red\">\n              Register your account\n            </font>\n            <div />\n            <label>Email address</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"Enter email\"\n              required\n            />\n            <label>Password</label>\n            <input\n              onChange={this.handleChange}\n              type=\"password\"\n              name=\"password\"\n              id=\"Password\"\n              placeholder=\"Password\"\n              required\n            />\n          </div>\n          <button\n            onClick={this.handleSubmit}\n            style={{ marginLeft: \"25px\" }}\n            className=\"btn btn-success\"\n            children=\"Get started\"\n          >\n            Signup\n          </button>\n          {authError ? <p>{authError}</p> : null}\n\n          <p>\n            Already have an account yet?\n            <NavLink to=\"/Login\"> Sign UP</NavLink>\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps= ( state)=>{\n  return {\n    authError:state.auth.authError\n  }\n}\nconst mapDispatchToProps=(dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\n\n\n\n\n\n\n\n\n\n/*\nlastttt\n\n\n\nimport React, { Component } from \"react\";\nimport firebase from \"./Base\";\nimport \"./MovieInfo.css\";\nimport \"firebase/auth\";\nimport { NavLink } from \"react-router-dom\";\n\n\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.signup = this.signup.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      error: null,\n    };\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { email, username, password } = this.state;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        const user = firebase.auth().currentUser;\n        user\n          .updateProfile({ displayName: username })\n          .then(() => {\n            this.props.history.push(\"/\");\n          })\n          .catch((error) => {\n            this.setState({ error });\n          });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n  }\n\n  render() {\n    const { email, username, password, error } = this.state;\n    return (\n      <div className=\"InfoContainer\">\n        <form>\n          <div className=\"form-group\">\n            <font size=\"10\" color=\"red\">\n              Register your account\n            </font>\n            <div />\n            {error && <p className=\"error-message\">{error.message}</p>}\n            <label>User name</label>\n            <input\n              value={username}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Enter user name\"\n              required\n            />\n            <label>Email address</label>\n            <input\n              value={email}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"Enter email\"\n              required\n            />\n            <label>Password</label>\n            <input\n              value={password}\n              onChange={this.handleChange}\n              type=\"password\"\n              name=\"password\"\n              id=\"Password\"\n              placeholder=\"Password\"\n              required\n            />\n          </div>\n          <button\n            onClick={this.handleSubmit}\n            style={{ marginLeft: \"25px\" }}\n            className=\"btn btn-success\"\n            children=\"Get started\"\n          >\n            Signup\n          </button>\n          <p>\n            Already have an account yet?\n            <NavLink to=\"/Login\"> Sign UP</NavLink>\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\nexport default SignUp;\n\n\n\n\n*/","import React, { Component} from \"react\";\nimport './App.css';\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport Nav from './Nav';\nimport Dashboard from \"./Dashboard.js\";\nimport { BrowserRouter as Router, Route , Switch} from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport SignUp from \"./SignUp.js\";\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null\n          };\n    this.logOutUser = this.logOutUser.bind(this);\n  }\n\n\n  render() {\n\n\n\n\n\n\n    return (\n        <Router>\n          <div className=\"backgroundImage\">\n                <Nav/>\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route path=\"/Login\" component={Login} />\n              <Route path=\"/SignUp\" component={SignUp} />\n              <Route path=\"/DashBoard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n\n/*\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport Nav from \"./Nav\";\nimport Dashboard from \"./Dashboard.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport SignUp from \"./SignUp.js\";\nimport firebase {auth}from \"./Base.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    };\n    this.logOutUser = this.logOutUser.bind(this);\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          user,\n        });\n      }\n    });\n  }\n\n  logOutUser = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then((window.location = \"/\"));\n  };\n\n  getUser = () => {\n    console.log(this.props + \"app naib\");\n\n    //firebase.auth().onAuthStateChanged(function (user) {\n    //  if (user) {\n    //   return user;\n    // } else {\n    ////   return;\n    //  }\n    //  });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"backgroundImage\">\n          <Nav\n            {...this.props}\n            componentDidMount={this.componentDidMount}\n            logOutUser={this.logOutUser}\n            getUser={this.getUser}\n          />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/Login\" component={Login} />\n            <Route path=\"/SignUp\" component={SignUp} />\n            <Route path=\"/DashBoard\" component={Dashboard} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\n    authError:null\n}\n\nconst authReducer =(state=initState , action) => {\n    switch (action.type) {\n        case 'login_success':\n        console.log('login success')\n            return {...state, authError:null}\n        case 'login_error':\n                console.log('login failed')\n            return{ ...state, authError: 'login failed'}\n        default: return state;\n    }\n}\nexport default authReducer\n\n","import authReducer from './authReducer.js';\nimport { combineReducers} from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n    auth:authReducer,\n    firestore:firestoreReducer,\n    firebase: firebaseReducer\n});\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from './rootReducer.js';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore , getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase , getFirebase } from \"react-redux-firebase\";\nimport firebase from './Base.js';\nconst store = createStore(rootReducer,\n             compose(\n                 applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n                 reduxFirestore(firebase),\n                 reactReduxFirebase(firebase)\n                 )\n            );\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}