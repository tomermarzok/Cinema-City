{
	"id": 0,
	"name": "blockstack.js 21.0.0 Library Reference",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "AuthScope",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Non-exhaustive list of common permission scopes."
			},
			"children": [
				{
					"id": 4,
					"name": "email",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Request the user's email if available."
					},
					"sources": [
						{
							"fileName": "src/auth/authConstants.ts",
							"line": 33,
							"character": 7
						}
					],
					"defaultValue": "\"email\""
				},
				{
					"id": 3,
					"name": "publish_data",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Publish data so that other users of the app can discover and interact with the user.\nThe user's files stored on Gaia hub are made visible to others via the `apps` property in the\nuserâ€™s `profile.json` file."
					},
					"sources": [
						{
							"fileName": "src/auth/authConstants.ts",
							"line": 29,
							"character": 14
						}
					],
					"defaultValue": "\"publish_data\""
				},
				{
					"id": 2,
					"name": "store_write",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Read and write data to the user's Gaia hub in an app-specific storage bucket.\nThis is the default scope."
					},
					"sources": [
						{
							"fileName": "src/auth/authConstants.ts",
							"line": 23,
							"character": 13
						}
					],
					"defaultValue": "\"store_write\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						4,
						3,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authConstants.ts",
					"line": 18,
					"character": 27
				}
			]
		},
		{
			"id": 888,
			"name": "AppConfig",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Configuration data for the current app.",
				"text": "On browser platforms, creating an instance of this\nclass without any arguments will use\n`window.location.origin` as the app domain.\nOn non-browser platforms, you need to\nspecify an app domain as the second argument.\n\n"
			},
			"children": [
				{
					"id": 895,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"signatures": [
						{
							"id": 896,
							"name": "new AppConfig",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 897,
									"name": "scopes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "permissions this app is requesting"
									},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"defaultValue": " DEFAULT_SCOPE.slice()"
								},
								{
									"id": 898,
									"name": "appDomain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the app domain"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " getGlobalObject('location', { returnEmptyObject: true }).origin"
								},
								{
									"id": 899,
									"name": "redirectPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "path on app domain to redirect users to after authentication"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								},
								{
									"id": 900,
									"name": "manifestPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "path relative to app domain of app's manifest file"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"/manifest.json\""
								},
								{
									"id": 901,
									"name": "coreNode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "override the default or user selected core node"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"defaultValue": " null"
								},
								{
									"id": 902,
									"name": "authenticatorURL",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the web-based fall back authenticator\n([[DEFAULT_BLOCKSTACK_HOST]])\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " DEFAULT_BLOCKSTACK_HOST"
								}
							],
							"type": {
								"type": "reference",
								"name": "AppConfig",
								"id": 888
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/appConfig.ts",
							"line": 59,
							"character": 27
						}
					]
				},
				{
					"id": 889,
					"name": "appDomain",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Blockstack apps are uniquely identified by their app domain."
					},
					"sources": [
						{
							"fileName": "src/auth/appConfig.ts",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 894,
					"name": "authenticatorURL",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The URL of a web-based Blockstack Authenticator to use in the event\nthe user doesn't have Blockstack installed on their machine. If this\nis not specified, the current default in this library will be used."
					},
					"sources": [
						{
							"fileName": "src/auth/appConfig.ts",
							"line": 59,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 893,
					"name": "coreNode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The URL of Blockstack core node to use for this app. If this is\n`null`, the core node specified by the user or default core node\nwill be used."
					},
					"sources": [
						{
							"fileName": "src/auth/appConfig.ts",
							"line": 51,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 892,
					"name": "manifestPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Path relative to app domain of app's manifest file.",
						"text": "This file needs to have CORS headers set so that it can be fetched\nfrom any origin. Typically this means return the header `Access-Control-Allow-Origin: *`.\n\n"
					},
					"sources": [
						{
							"fileName": "src/auth/appConfig.ts",
							"line": 43,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 891,
					"name": "redirectPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Path on app domain to redirect users to after authentication. The\nauthentication response token will be postpended in a query."
					},
					"sources": [
						{
							"fileName": "src/auth/appConfig.ts",
							"line": 34,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 890,
					"name": "scopes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An array of string representing permissions requested by the app."
					},
					"sources": [
						{
							"fileName": "src/auth/appConfig.ts",
							"line": 26,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Array",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "AuthScope",
										"id": 1
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						]
					}
				},
				{
					"id": 905,
					"name": "manifestURI",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 906,
							"name": "manifestURI",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The location of the app's manifest file.",
								"returns": "- URI\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/appConfig.ts",
							"line": 97,
							"character": 13
						}
					]
				},
				{
					"id": 903,
					"name": "redirectURI",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 904,
							"name": "redirectURI",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The location to which the authenticator should\nredirect the user.",
								"returns": "- URI\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/appConfig.ts",
							"line": 89,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						895
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						889,
						894,
						893,
						892,
						891,
						890
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						905,
						903
					]
				}
			],
			"sources": [
				{
					"fileName": "src/auth/appConfig.ts",
					"line": 15,
					"character": 22
				}
			]
		},
		{
			"id": 408,
			"name": "BlockstackNetwork",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Use the methods in class to build third-party wallets or in DApps that register names."
			},
			"children": [
				{
					"id": 420,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 421,
							"name": "new BlockstackNetwork",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 422,
									"name": "apiUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 423,
									"name": "broadcastServiceUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 424,
									"name": "bitcoinAPI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BitcoinNetwork"
									}
								},
								{
									"id": 425,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Network"
									},
									"defaultValue": " networks.bitcoin"
								}
							],
							"type": {
								"type": "reference",
								"name": "BlockstackNetwork",
								"id": 408
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 79,
							"character": 21
						}
					]
				},
				{
					"id": 412,
					"name": "DUST_MINIMUM",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 71,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 419,
					"name": "MAGIC_BYTES",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 79,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 409,
					"name": "blockstackAPIUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 62,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 410,
					"name": "broadcastServiceUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 64,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 418,
					"name": "btc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 77,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "BitcoinNetwork"
					}
				},
				{
					"id": 417,
					"name": "excludeUtxoSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 75,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "UTXO",
							"id": 382
						}
					}
				},
				{
					"id": 413,
					"name": "includeUtxoMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 73,
							"character": 16
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 414,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 415,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 416,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "UTXO",
											"id": 382
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/network.ts",
									"line": 73,
									"character": 17
								}
							]
						}
					}
				},
				{
					"id": 499,
					"name": "broadcastNameRegistration",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 500,
							"name": "broadcastNameRegistration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Sends the preorder and registration transactions and zone file\nfor a Blockstack name registration along with the to the transaction\n broadcast service.",
								"text": "The transaction broadcast:\n\n* immediately broadcasts the preorder transaction\n* broadcasts the register transactions after the preorder transaction\nhas an appropriate number of confirmations\n* broadcasts the zone file to the Atlas network after the register transaction\nhas an appropriate number of confirmations\n\nThis is intended for use in third-party wallets or in DApps that register names.\n",
								"returns": "Returns a Promise that resolves to an object with a\n`transaction_hash` key containing the transaction hash of the broadcasted transaction.\n\nIn the event of an error, it rejects with:\n* a `RemoteServiceError` if there is a problem\n  with the transaction broadcast service\n* `MissingParameterError` if you call the function without a required\n  parameter"
							},
							"parameters": [
								{
									"id": 501,
									"name": "preorderTransaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the hex-encoded, signed preorder transaction generated\nusing the `makePreorder` function"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 502,
									"name": "registerTransaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the hex-encoded, signed register transaction generated\nusing the `makeRegister` function"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 503,
									"name": "zoneFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the zone file to be broadcast to the Atlas network"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 815,
							"character": 27
						}
					]
				},
				{
					"id": 486,
					"name": "broadcastServiceFetchHelper",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 487,
							"name": "broadcastServiceFetchHelper",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Performs a POST request to the given URL. This is intended for\nuse in third-party wallets or in DApps that register names.",
								"returns": "Returns a `Promise` that resolves to the object requested.\nIn the event of an error, it rejects with:\n* a `RemoteServiceError` if there is a problem\nwith the transaction broadcast service\n* `MissingParameterError` if you call the function without a required\nparameter\n"
							},
							"parameters": [
								{
									"id": 488,
									"name": "endpoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name of"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 489,
									"name": "body",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Error"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 628,
							"character": 29
						}
					]
				},
				{
					"id": 490,
					"name": "broadcastTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 491,
							"name": "broadcastTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Broadcasts a signed bitcoin transaction to the network optionally waiting to broadcast the\ntransaction until a second transaction has a certain number of confirmations.",
								"text": "This is intended for use in third-party wallets or in DApps that register names.\n",
								"returns": "Returns a Promise that resolves to an object with a\n`transaction_hash` key containing the transaction hash of the broadcasted transaction.\n\nIn the event of an error, it rejects with:\n* a `RemoteServiceError` if there is a problem\n  with the transaction broadcast service\n* `MissingParameterError` if you call the function without a required\n  parameter"
							},
							"parameters": [
								{
									"id": 492,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the hex-encoded transaction to broadcast"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 493,
									"name": "transactionToWatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the hex transaction id of the transaction to watch for\nthe specified number of confirmations before broadcasting the `transaction`"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " null"
								},
								{
									"id": 494,
									"name": "confirmations",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the number of confirmations `transactionToWatch` must have\nbefore broadcasting `transaction`."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "6"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 672,
							"character": 22
						}
					]
				},
				{
					"id": 495,
					"name": "broadcastZoneFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 496,
							"name": "broadcastZoneFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Broadcasts a zone file to the Atlas network via the transaction broadcast service.\nThis is intended for use in third-party wallets or in DApps that register names.",
								"returns": "Returns a Promise that resolves to an object with a\n`transaction_hash` key containing the transaction hash of the broadcasted transaction.\n\nIn the event of an error, it rejects with:\n* a `RemoteServiceError` if there is a problem\n  with the transaction broadcast service\n* `MissingParameterError` if you call the function without a required\n  parameter"
							},
							"parameters": [
								{
									"id": 497,
									"name": "zoneFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the zone file to be broadcast to the Atlas network"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 498,
									"name": "transactionToWatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the hex transaction id of the transaction\nto watch for confirmation before broadcasting the zone file to the Atlas network"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " null"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 728,
							"character": 19
						}
					]
				},
				{
					"id": 475,
					"name": "getAccountAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 476,
							"name": "getAccountAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the state(s) of an account at a particular block height.  This includes the state of the\naccount beginning with this block's transactions, as well as all of the states the account\npassed through when this block was processed (if any).",
								"text": "This is intended for use in third-party wallets or in DApps that register names.",
								"returns": "a promise that resolves to an Array of Objects, where each Object encodes\n  states of the account at this block.\n"
							},
							"parameters": [
								{
									"id": 477,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the account's address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 478,
									"name": "blockHeight",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the block to query"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 527,
							"character": 14
						}
					]
				},
				{
					"id": 482,
					"name": "getAccountBalance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 483,
							"name": "getAccountBalance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the number of tokens owned by an account.  If the account does not exist or has no\ntokens of this type, then 0 will be returned.",
								"text": "This is intended for use in third-party wallets or in DApps that register names.",
								"returns": "a promise that resolves to a BigInteger that encodes the number of tokens\n  held by this account.\n"
							},
							"parameters": [
								{
									"id": 484,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the account's address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 485,
									"name": "tokenType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the type of token to query."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BN"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 589,
							"character": 19
						}
					]
				},
				{
					"id": 471,
					"name": "getAccountHistoryPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 472,
							"name": "getAccountHistoryPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a page of an account's transaction history. This is intended for use in\nthird-party wallets or in DApps that register names.",
								"returns": "a promise that resolves to an Array of Objects, where each Object encodes\n  states of the account at various block heights (e.g. prior balances, txids, etc)\n"
							},
							"parameters": [
								{
									"id": 473,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the account's address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 474,
									"name": "page",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the page number.  Page 0 is the most recent transactions"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 489,
							"character": 23
						}
					]
				},
				{
					"id": 467,
					"name": "getAccountStatus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 468,
							"name": "getAccountStatus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the status of an account for a particular token holding.  This includes its total number of\nexpenditures and credits, lockup times, last `txid`, and so on.",
								"text": "This is intended for use in third-party wallets or in DApps that register names.",
								"returns": "a promise that resolves to an object representing the state of the account\n  for this token\n"
							},
							"parameters": [
								{
									"id": 469,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the account"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 470,
									"name": "tokenType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token type to query"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 459,
							"character": 18
						}
					]
				},
				{
					"id": 479,
					"name": "getAccountTokens",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 480,
							"name": "getAccountTokens",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the set of token types that this account owns. This is intended for use\nin third-party wallets or in DApps that register names.",
								"returns": "a promise that resolves to an Array of Strings, where each item encodes the\n  type of token this account holds (excluding the underlying blockchain's tokens)\n"
							},
							"parameters": [
								{
									"id": 481,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the account's address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AccountTokens",
										"id": 390
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 560,
							"character": 18
						}
					]
				},
				{
					"id": 429,
					"name": "getDefaultBurnAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 430,
							"name": "getDefaultBurnAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This is intended for use in third-party wallets or in DApps that register names."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 118,
							"character": 23
						}
					]
				},
				{
					"id": 449,
					"name": "getGracePeriod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 450,
							"name": "getGracePeriod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "How many blocks can pass between a name expiring and the name being able to be\nre-registered by a different owner. This is intended for\nuse in third-party wallets or in DApps that register names.",
								"returns": "a promise to the number of blocks\n"
							},
							"parameters": [
								{
									"id": 451,
									"name": "_fullyQualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 304,
							"character": 16
						}
					]
				},
				{
					"id": 458,
					"name": "getNameInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 459,
							"name": "getNameInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names.",
								"returns": "a promise that resolves to the WHOIS-like information\n"
							},
							"parameters": [
								{
									"id": 460,
									"name": "fullyQualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name to query.  Can be on-chain of off-chain."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 362,
							"character": 13
						}
					]
				},
				{
					"id": 443,
					"name": "getNamePrice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 444,
							"name": "getNamePrice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the price of a name. This is intended for\nuse in third-party wallets or in DApps that register names.\nThis is intended for use in third-party wallets or in DApps that register names.",
								"returns": "a promise to an Object with { units: String, amount: BigInteger }, where\n  .units encodes the cryptocurrency units to pay (e.g. BTC, STACKS), and\n  .amount encodes the number of units, in the smallest denominiated amount\n  (e.g. if .units is BTC, .amount will be satoshis; if .units is STACKS,\n  .amount will be microStacks)\n"
							},
							"parameters": [
								{
									"id": 445,
									"name": "fullyQualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name to query"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "PriceInfo",
										"id": 387
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 275,
							"character": 14
						}
					]
				},
				{
					"id": 431,
					"name": "getNamePriceV1",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 432,
							"name": "getNamePriceV1",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Get the price of a name via the legacy /v1/prices API endpoint. This is\nintended for use in third-party wallets or in DApps that register names.",
								"returns": "a promise to an Object with { units: String, amount: BigInteger }"
							},
							"parameters": [
								{
									"id": 433,
									"name": "fullyQualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name to query"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "PriceInfo",
										"id": 387
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 129,
							"character": 16
						}
					]
				},
				{
					"id": 437,
					"name": "getNamePriceV2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 438,
							"name": "getNamePriceV2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Get the price of a name via the /v2/prices API endpoint. This is intended\nfor use in third-party wallets or in DApps that register names.",
								"returns": "a promise to an Object with { units: String, amount: BigInteger }"
							},
							"parameters": [
								{
									"id": 439,
									"name": "fullyQualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name to query"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "PriceInfo",
										"id": 387
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 196,
							"character": 16
						}
					]
				},
				{
					"id": 452,
					"name": "getNamesOwned",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 453,
							"name": "getNamesOwned",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the names -- both on-chain and off-chain -- owned by an address. This is intended for\nuse in third-party wallets or in DApps that register names.",
								"returns": "a promise that resolves to a list of names (Strings)\n"
							},
							"parameters": [
								{
									"id": 454,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the blockchain address (the hash of the owner public key)"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 314,
							"character": 15
						}
					]
				},
				{
					"id": 455,
					"name": "getNamespaceBurnAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 456,
							"name": "getNamespaceBurnAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the blockchain address to which a name's registration fee must be sent\n(the address will depend on the namespace in which it is registered.)",
								"text": "This is intended for use in third-party wallets or in DApps that register names.",
								"returns": "a promise that resolves to an address (String)\n"
							},
							"parameters": [
								{
									"id": 457,
									"name": "namespace",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the namespace ID"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 329,
							"character": 25
						}
					]
				},
				{
					"id": 461,
					"name": "getNamespaceInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 462,
							"name": "getNamespaceInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the pricing parameters and creation history of a namespace. This is intended for\nuse in third-party wallets or in DApps that register names.",
								"returns": "a promise that resolves to the namespace information.\n"
							},
							"parameters": [
								{
									"id": 463,
									"name": "namespaceID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the namespace to query"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 394,
							"character": 18
						}
					]
				},
				{
					"id": 446,
					"name": "getNamespacePrice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 447,
							"name": "getNamespacePrice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the price of a namespace. This is intended for use in third-party\nwallets or in DApps that register names.",
								"returns": "a promise to an Object with { units: String, amount: BigInteger }, where\n  .units encodes the cryptocurrency units to pay (e.g. BTC, STACKS), and\n  .amount encodes the number of units, in the smallest denominiated amount\n  (e.g. if .units is BTC, .amount will be satoshis; if .units is STACKS,\n  .amount will be microStacks)\n"
							},
							"parameters": [
								{
									"id": 448,
									"name": "namespaceID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the namespace to query"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "PriceInfo",
										"id": 387
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 291,
							"character": 19
						}
					]
				},
				{
					"id": 434,
					"name": "getNamespacePriceV1",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 435,
							"name": "getNamespacePriceV1",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Get the price of a namespace via the legacy /v1/prices API endpoint. This is intended for\nuse in third-party wallets or in DApps that register names.",
								"returns": "a promise to an Object with { units: String, amount: BigInteger }"
							},
							"parameters": [
								{
									"id": 436,
									"name": "namespaceID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the namespace to query"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "PriceInfo",
										"id": 387
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 164,
							"character": 21
						}
					]
				},
				{
					"id": 440,
					"name": "getNamespacePriceV2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 441,
							"name": "getNamespacePriceV2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Get the price of a namespace via the /v2/prices API endpoint.\nThis is intended for use in third-party wallets or in DApps that register names.",
								"returns": "a promise to an Object with { units: String, amount: BigInteger }"
							},
							"parameters": [
								{
									"id": 442,
									"name": "namespaceID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the namespace to query"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "PriceInfo",
										"id": 387
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 235,
							"character": 21
						}
					]
				},
				{
					"id": 524,
					"name": "getNetworkedUTXOs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 525,
							"name": "getNetworkedUTXOs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 526,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "UTXO",
											"id": 382
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 987,
							"character": 19
						}
					]
				},
				{
					"id": 519,
					"name": "getTransactionInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 520,
							"name": "getTransactionInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 521,
									"name": "txHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "TransactionInfo",
										"id": 392
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 976,
							"character": 20
						}
					]
				},
				{
					"id": 464,
					"name": "getZonefile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 465,
							"name": "getZonefile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a zone file, given its hash.  Throws an exception if the zone file\nobtained does not match the hash.",
								"text": "This is intended for use in third-party wallets or in DApps that register names.\n",
								"returns": "a promise that resolves to the zone file's text\n"
							},
							"parameters": [
								{
									"id": 466,
									"name": "zonefileHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the ripemd160(sha256) hash of the zone file"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 429,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						420
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						412,
						419,
						409,
						410,
						418,
						417,
						413
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						499,
						486,
						490,
						495,
						475,
						482,
						471,
						467,
						479,
						429,
						449,
						458,
						443,
						431,
						437,
						452,
						455,
						461,
						446,
						434,
						440,
						524,
						519,
						464
					]
				}
			],
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 61,
					"character": 30
				}
			]
		},
		{
			"id": 1252,
			"name": "Facebook",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1263,
					"name": "getBaseUrls",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1264,
							"name": "getBaseUrls",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/facebook.ts",
							"line": 38,
							"character": 13
						}
					]
				},
				{
					"id": 1276,
					"name": "getProofIdentity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1277,
							"name": "getProofIdentity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1278,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1279,
									"name": "_cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.getProofIdentity"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 55,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.getProofIdentity"
					}
				},
				{
					"id": 1259,
					"name": "getProofStatement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1260,
							"name": "getProofStatement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1261,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1262,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofStatement"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/facebook.ts",
							"line": 32,
							"character": 19
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofStatement"
					}
				},
				{
					"id": 1253,
					"name": "getProofUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1254,
							"name": "getProofUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1255,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/facebook.ts",
							"line": 5,
							"character": 13
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofUrl"
					}
				},
				{
					"id": 1256,
					"name": "normalizeUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1257,
							"name": "normalizeUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1258,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.normalizeUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/facebook.ts",
							"line": 9,
							"character": 14
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.normalizeUrl"
					}
				},
				{
					"id": 1273,
					"name": "prefixScheme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1274,
							"name": "prefixScheme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1275,
									"name": "proofUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.prefixScheme"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 45,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.prefixScheme"
					}
				},
				{
					"id": 1271,
					"name": "shouldValidateIdentityInBody",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1272,
							"name": "shouldValidateIdentityInBody",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.shouldValidateIdentityInBody"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 41,
							"character": 30
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.shouldValidateIdentityInBody"
					}
				},
				{
					"id": 1265,
					"name": "validateProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1266,
							"name": "validateProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1267,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								},
								{
									"id": 1268,
									"name": "ownerAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1269,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								},
								{
									"id": 1270,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " null"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.validateProof"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 11,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.validateProof"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1263,
						1276,
						1259,
						1253,
						1256,
						1273,
						1271,
						1265
					]
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/services/facebook.ts",
					"line": 4,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Service"
				}
			]
		},
		{
			"id": 1280,
			"name": "Github",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1281,
					"name": "getBaseUrls",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1282,
							"name": "getBaseUrls",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/github.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 1304,
					"name": "getProofIdentity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1305,
							"name": "getProofIdentity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1306,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1307,
									"name": "_cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.getProofIdentity"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 55,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.getProofIdentity"
					}
				},
				{
					"id": 1289,
					"name": "getProofStatement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1290,
							"name": "getProofStatement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1291,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1292,
									"name": "_cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofStatement"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/github.ts",
							"line": 31,
							"character": 19
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofStatement"
					}
				},
				{
					"id": 1286,
					"name": "getProofUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1287,
							"name": "getProofUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1288,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/github.ts",
							"line": 15,
							"character": 13
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofUrl"
					}
				},
				{
					"id": 1283,
					"name": "normalizeUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1284,
							"name": "normalizeUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1285,
									"name": "_proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.normalizeUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/github.ts",
							"line": 11,
							"character": 14
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.normalizeUrl"
					}
				},
				{
					"id": 1301,
					"name": "prefixScheme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1302,
							"name": "prefixScheme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1303,
									"name": "proofUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.prefixScheme"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 45,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.prefixScheme"
					}
				},
				{
					"id": 1299,
					"name": "shouldValidateIdentityInBody",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1300,
							"name": "shouldValidateIdentityInBody",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.shouldValidateIdentityInBody"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 41,
							"character": 30
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.shouldValidateIdentityInBody"
					}
				},
				{
					"id": 1293,
					"name": "validateProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1294,
							"name": "validateProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1295,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								},
								{
									"id": 1296,
									"name": "ownerAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1297,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								},
								{
									"id": 1298,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " null"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.validateProof"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 11,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.validateProof"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1281,
						1304,
						1289,
						1286,
						1283,
						1301,
						1299,
						1293
					]
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/services/github.ts",
					"line": 5,
					"character": 12
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Service"
				}
			]
		},
		{
			"id": 1364,
			"name": "HackerNews",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1365,
					"name": "getBaseUrls",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1366,
							"name": "getBaseUrls",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/hackerNews.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1388,
					"name": "getProofIdentity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1389,
							"name": "getProofIdentity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1390,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1391,
									"name": "_cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.getProofIdentity"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 55,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.getProofIdentity"
					}
				},
				{
					"id": 1373,
					"name": "getProofStatement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1374,
							"name": "getProofStatement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1375,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1376,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofStatement"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/hackerNews.ts",
							"line": 31,
							"character": 19
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofStatement"
					}
				},
				{
					"id": 1367,
					"name": "getProofUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1368,
							"name": "getProofUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1369,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/hackerNews.ts",
							"line": 14,
							"character": 13
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofUrl"
					}
				},
				{
					"id": 1370,
					"name": "normalizeUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1371,
							"name": "normalizeUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1372,
									"name": "_proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.normalizeUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/hackerNews.ts",
							"line": 27,
							"character": 14
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.normalizeUrl"
					}
				},
				{
					"id": 1385,
					"name": "prefixScheme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1386,
							"name": "prefixScheme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1387,
									"name": "proofUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.prefixScheme"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 45,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.prefixScheme"
					}
				},
				{
					"id": 1383,
					"name": "shouldValidateIdentityInBody",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1384,
							"name": "shouldValidateIdentityInBody",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.shouldValidateIdentityInBody"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 41,
							"character": 30
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.shouldValidateIdentityInBody"
					}
				},
				{
					"id": 1377,
					"name": "validateProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1378,
							"name": "validateProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1379,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								},
								{
									"id": 1380,
									"name": "ownerAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1381,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								},
								{
									"id": 1382,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " null"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.validateProof"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 11,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.validateProof"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1365,
						1388,
						1373,
						1367,
						1370,
						1385,
						1383,
						1377
					]
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/services/hackerNews.ts",
					"line": 4,
					"character": 16
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Service"
				}
			]
		},
		{
			"id": 1336,
			"name": "Instagram",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1337,
					"name": "getBaseUrls",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1338,
							"name": "getBaseUrls",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/instagram.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1347,
					"name": "getProofIdentity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1348,
							"name": "getProofIdentity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1349,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1350,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofIdentity"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/instagram.ts",
							"line": 37,
							"character": 18
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofIdentity"
					}
				},
				{
					"id": 1351,
					"name": "getProofStatement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1352,
							"name": "getProofStatement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1353,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1354,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofStatement"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/instagram.ts",
							"line": 47,
							"character": 19
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofStatement"
					}
				},
				{
					"id": 1339,
					"name": "getProofUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1340,
							"name": "getProofUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1341,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/instagram.ts",
							"line": 10,
							"character": 13
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofUrl"
					}
				},
				{
					"id": 1342,
					"name": "normalizeUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1343,
							"name": "normalizeUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1344,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.normalizeUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/instagram.ts",
							"line": 22,
							"character": 14
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.normalizeUrl"
					}
				},
				{
					"id": 1361,
					"name": "prefixScheme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1362,
							"name": "prefixScheme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1363,
									"name": "proofUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.prefixScheme"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 45,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.prefixScheme"
					}
				},
				{
					"id": 1345,
					"name": "shouldValidateIdentityInBody",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1346,
							"name": "shouldValidateIdentityInBody",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.shouldValidateIdentityInBody"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/instagram.ts",
							"line": 33,
							"character": 30
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.shouldValidateIdentityInBody"
					}
				},
				{
					"id": 1355,
					"name": "validateProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1356,
							"name": "validateProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1357,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								},
								{
									"id": 1358,
									"name": "ownerAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1359,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								},
								{
									"id": 1360,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " null"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.validateProof"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 11,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.validateProof"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1337,
						1347,
						1351,
						1339,
						1342,
						1361,
						1345,
						1355
					]
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/services/instagram.ts",
					"line": 4,
					"character": 15
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Service"
				}
			]
		},
		{
			"id": 1392,
			"name": "LinkedIn",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1393,
					"name": "getBaseUrls",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1394,
							"name": "getBaseUrls",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/linkedIn.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1403,
					"name": "getProofIdentity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1404,
							"name": "getProofIdentity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1405,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1406,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofIdentity"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/linkedIn.ts",
							"line": 36,
							"character": 18
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofIdentity"
					}
				},
				{
					"id": 1407,
					"name": "getProofStatement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1408,
							"name": "getProofStatement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1409,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1410,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofStatement"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/linkedIn.ts",
							"line": 55,
							"character": 19
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofStatement"
					}
				},
				{
					"id": 1395,
					"name": "getProofUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1396,
							"name": "getProofUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1397,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/linkedIn.ts",
							"line": 14,
							"character": 13
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofUrl"
					}
				},
				{
					"id": 1398,
					"name": "normalizeUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1399,
							"name": "normalizeUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1400,
									"name": "_proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.normalizeUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/linkedIn.ts",
							"line": 28,
							"character": 14
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.normalizeUrl"
					}
				},
				{
					"id": 1417,
					"name": "prefixScheme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1418,
							"name": "prefixScheme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1419,
									"name": "proofUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.prefixScheme"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 45,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.prefixScheme"
					}
				},
				{
					"id": 1401,
					"name": "shouldValidateIdentityInBody",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1402,
							"name": "shouldValidateIdentityInBody",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.shouldValidateIdentityInBody"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/linkedIn.ts",
							"line": 32,
							"character": 30
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.shouldValidateIdentityInBody"
					}
				},
				{
					"id": 1411,
					"name": "validateProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1412,
							"name": "validateProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1413,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								},
								{
									"id": 1414,
									"name": "ownerAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1415,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								},
								{
									"id": 1416,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " null"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.validateProof"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 11,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.validateProof"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1393,
						1403,
						1407,
						1395,
						1398,
						1417,
						1401,
						1411
					]
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/services/linkedIn.ts",
					"line": 4,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Service"
				}
			]
		},
		{
			"id": 999,
			"name": "NodeCryptoAesCipher",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1002,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1003,
							"name": "new NodeCryptoAesCipher",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1004,
									"name": "createCipher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NodeCryptoCreateCipher",
										"id": 1035
									}
								},
								{
									"id": 1005,
									"name": "createDecipher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NodeCryptoCreateDecipher",
										"id": 1036
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeCryptoAesCipher",
								"id": 999
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 25,
							"character": 42
						}
					]
				},
				{
					"id": 1000,
					"name": "createCipher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 23,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "NodeCryptoCreateCipher",
						"id": 1035
					}
				},
				{
					"id": 1001,
					"name": "createDecipher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 25,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "NodeCryptoCreateDecipher",
						"id": 1036
					}
				},
				{
					"id": 1012,
					"name": "decrypt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1013,
							"name": "decrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1014,
									"name": "algorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CipherAlgorithm",
										"id": 1037
									}
								},
								{
									"id": 1015,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 1016,
									"name": "iv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 1017,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "AesCipher.decrypt",
								"id": 994
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 46,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "AesCipher.decrypt",
						"id": 993
					}
				},
				{
					"id": 1006,
					"name": "encrypt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1007,
							"name": "encrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1008,
									"name": "algorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CipherAlgorithm",
										"id": 1037
									}
								},
								{
									"id": 1009,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 1010,
									"name": "iv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 1011,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "AesCipher.encrypt",
								"id": 988
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 32,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "AesCipher.encrypt",
						"id": 987
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1002
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1000,
						1001
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1012,
						1006
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/aesCipher.ts",
					"line": 22,
					"character": 32
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "AesCipher",
					"id": 986
				}
			]
		},
		{
			"id": 965,
			"name": "NodeCryptoHmacSha256",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 967,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 968,
							"name": "new NodeCryptoHmacSha256",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 969,
									"name": "createHmac",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NodeCryptoCreateHmac",
										"id": 983
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeCryptoHmacSha256",
								"id": 965
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/hmacSha256.ts",
							"line": 10,
							"character": 34
						}
					]
				},
				{
					"id": 966,
					"name": "createHmac",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/hmacSha256.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "NodeCryptoCreateHmac",
						"id": 983
					}
				},
				{
					"id": 970,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 971,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 972,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 973,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Hmac.digest",
								"id": 962
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/hmacSha256.ts",
							"line": 16,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Hmac.digest",
						"id": 961
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						967
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						966
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						970
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/hmacSha256.ts",
					"line": 9,
					"character": 33
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Hmac",
					"id": 960
				}
			]
		},
		{
			"id": 2099,
			"name": "NodeCryptoPbkdf2",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2101,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2102,
							"name": "new NodeCryptoPbkdf2",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2103,
									"name": "nodePbkdf2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NodePbkdf2Fn",
										"id": 2136
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeCryptoPbkdf2",
								"id": 2099
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 17,
							"character": 26
						}
					]
				},
				{
					"id": 2100,
					"name": "nodePbkdf2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 17,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "NodePbkdf2Fn",
						"id": 2136
					}
				},
				{
					"id": 2104,
					"name": "derive",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2105,
							"name": "derive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2106,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2107,
									"name": "salt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 2108,
									"name": "iterations",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2109,
									"name": "keyLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2110,
									"name": "digest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Pbkdf2Digests",
										"id": 2135
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Pbkdf2.derive",
								"id": 2093
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 23,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Pbkdf2.derive",
						"id": 2092
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2101
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2100
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2104
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/pbkdf2.ts",
					"line": 16,
					"character": 29
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Pbkdf2",
					"id": 2091
				}
			]
		},
		{
			"id": 369,
			"name": "NodeCryptoRipemd160Digest",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 371,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 372,
							"name": "new NodeCryptoRipemd160Digest",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 373,
									"name": "nodeCryptoCreateHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NodeCryptoCreateHash",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeCryptoRipemd160Digest",
								"id": 369
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/hashRipemd160.ts",
							"line": 24,
							"character": 44
						}
					]
				},
				{
					"id": 370,
					"name": "nodeCryptoCreateHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/hashRipemd160.ts",
							"line": 24,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "NodeCryptoCreateHash",
						"id": 352
					}
				},
				{
					"id": 374,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 375,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 376,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Ripemd160Digest.digest",
								"id": 363
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/hashRipemd160.ts",
							"line": 30,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Ripemd160Digest.digest",
						"id": 362
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						371
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						370
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						374
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/hashRipemd160.ts",
					"line": 23,
					"character": 38
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Ripemd160Digest",
					"id": 361
				}
			]
		},
		{
			"id": 334,
			"name": "NodeCryptoSha2Hash",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 336,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 337,
							"name": "new NodeCryptoSha2Hash",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 338,
									"name": "createHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NodeCryptoCreateHash",
										"id": 352
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeCryptoSha2Hash",
								"id": 334
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/sha2Hash.ts",
							"line": 11,
							"character": 34
						}
					]
				},
				{
					"id": 335,
					"name": "createHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/sha2Hash.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "NodeCryptoCreateHash",
						"id": 352
					}
				},
				{
					"id": 339,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 340,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 341,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 342,
									"name": "algorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"sha256\""
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/sha2Hash.ts",
							"line": 17,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						336
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						335
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						339
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/sha2Hash.ts",
					"line": 10,
					"character": 31
				}
			]
		},
		{
			"id": 2139,
			"name": "PasswordError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2141,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 974,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 2140,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 973,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 2142,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 975,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.stack"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				},
				{
					"id": 2143,
					"name": "Error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 984,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ErrorConstructor"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2141,
						2140,
						2142,
						2143
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/wallet.ts",
					"line": 59,
					"character": 19
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Error"
				}
			]
		},
		{
			"id": 1438,
			"name": "Profile",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Represents a user profile"
			},
			"children": [
				{
					"id": 1443,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1444,
							"name": "new Profile",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1445,
									"name": "profile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1446,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "Profile",
								"id": 1438
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 22,
							"character": 32
						}
					]
				},
				{
					"id": 1439,
					"name": "_profile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 22,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1440,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 1441,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 1442,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profile.ts",
									"line": 22,
									"character": 11
								}
							]
						}
					}
				},
				{
					"id": 1447,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1448,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1449,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 1450,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 1451,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 30,
							"character": 8
						}
					]
				},
				{
					"id": 1452,
					"name": "toToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1453,
							"name": "toToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1454,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 34,
							"character": 9
						}
					]
				},
				{
					"id": 1459,
					"name": "fromToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1460,
							"name": "fromToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1461,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1462,
									"name": "publicKeyOrAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"defaultValue": " null"
								}
							],
							"type": {
								"type": "reference",
								"name": "Profile",
								"id": 1438
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 43,
							"character": 18
						}
					]
				},
				{
					"id": 1463,
					"name": "makeZoneFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1464,
							"name": "makeZoneFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1465,
									"name": "domainName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1466,
									"name": "tokenFileURL",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 48,
							"character": 21
						}
					]
				},
				{
					"id": 1467,
					"name": "validateProofs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1468,
							"name": "validateProofs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1469,
									"name": "domainName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1470,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 52,
							"character": 29
						}
					]
				},
				{
					"id": 1455,
					"name": "validateSchema",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1456,
							"name": "validateSchema",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1457,
									"name": "profile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1458,
									"name": "strict",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 38,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1443
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1439
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1447,
						1452,
						1459,
						1463,
						1467,
						1455
					]
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profile.ts",
					"line": 21,
					"character": 20
				}
			]
		},
		{
			"id": 365,
			"name": "Ripemd160PolyfillDigest",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 366,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 367,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 368,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Ripemd160Digest.digest",
								"id": 363
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/hashRipemd160.ts",
							"line": 11,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Ripemd160Digest.digest",
						"id": 362
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						366
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/hashRipemd160.ts",
					"line": 10,
					"character": 36
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Ripemd160Digest",
					"id": 361
				}
			]
		},
		{
			"id": 1159,
			"name": "SessionDataStore",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An abstract class representing the SessionDataStore interface."
			},
			"children": [
				{
					"id": 1160,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1161,
							"name": "new SessionDataStore",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1162,
									"name": "sessionOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "SessionOptions",
										"id": 1133
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SessionDataStore",
								"id": 1159
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/sessionStore.ts",
							"line": 14,
							"character": 31
						}
					]
				},
				{
					"id": 1168,
					"name": "deleteSessionData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1169,
							"name": "deleteSessionData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/sessionStore.ts",
							"line": 31,
							"character": 19
						}
					]
				},
				{
					"id": 1163,
					"name": "getSessionData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1164,
							"name": "getSessionData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "SessionData"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/sessionStore.ts",
							"line": 22,
							"character": 16
						}
					]
				},
				{
					"id": 1165,
					"name": "setSessionData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1166,
							"name": "setSessionData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1167,
									"name": "session",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SessionData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/sessionStore.ts",
							"line": 27,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1160
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1168,
						1163,
						1165
					]
				}
			],
			"sources": [
				{
					"fileName": "src/auth/sessionStore.ts",
					"line": 14,
					"character": 29
				}
			]
		},
		{
			"id": 1308,
			"name": "Twitter",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1309,
					"name": "getBaseUrls",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1310,
							"name": "getBaseUrls",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/twitter.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1332,
					"name": "getProofIdentity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1333,
							"name": "getProofIdentity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1334,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1335,
									"name": "_cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.getProofIdentity"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 55,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.getProofIdentity"
					}
				},
				{
					"id": 1314,
					"name": "getProofStatement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1315,
							"name": "getProofStatement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1316,
									"name": "searchText",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1317,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofStatement"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/twitter.ts",
							"line": 18,
							"character": 19
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofStatement"
					}
				},
				{
					"id": 1318,
					"name": "getProofUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1319,
							"name": "getProofUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1320,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.getProofUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/twitter.ts",
							"line": 28,
							"character": 13
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.getProofUrl"
					}
				},
				{
					"id": 1311,
					"name": "normalizeUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1312,
							"name": "normalizeUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1313,
									"name": "_proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Service.normalizeUrl"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/twitter.ts",
							"line": 14,
							"character": 14
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Service.normalizeUrl"
					}
				},
				{
					"id": 1329,
					"name": "prefixScheme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1330,
							"name": "prefixScheme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1331,
									"name": "proofUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.prefixScheme"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 45,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.prefixScheme"
					}
				},
				{
					"id": 1327,
					"name": "shouldValidateIdentityInBody",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1328,
							"name": "shouldValidateIdentityInBody",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.shouldValidateIdentityInBody"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 41,
							"character": 30
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.shouldValidateIdentityInBody"
					}
				},
				{
					"id": 1321,
					"name": "validateProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1322,
							"name": "validateProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1323,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								},
								{
									"id": 1324,
									"name": "ownerAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1325,
									"name": "cheerio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CheerioModuleType",
										"id": 1251
									}
								},
								{
									"id": 1326,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " null"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AccountProofInfo",
										"id": 1427
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Service.validateProof"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/services/service.ts",
							"line": 11,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Service.validateProof"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1309,
						1332,
						1314,
						1318,
						1311,
						1329,
						1327,
						1321
					]
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/services/twitter.ts",
					"line": 4,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Service"
				}
			]
		},
		{
			"id": 1889,
			"name": "UserSession",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Represents an instance of a signed in user for a particular app.",
				"text": "A signed in user has access to two major pieces of information\nabout the user, the user's private key for that app and the location\nof the user's gaia storage bucket for the app.\n\nA user can be signed in either directly through the interactive\nsign in process or by directly providing the app private key.\n\n\n\n"
			},
			"children": [
				{
					"id": 1892,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a UserSession object"
					},
					"signatures": [
						{
							"id": 1893,
							"name": "new UserSession",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a UserSession object"
							},
							"parameters": [
								{
									"id": 1894,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1895,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1896,
													"name": "appConfig",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/auth/userSession.ts",
															"line": 50,
															"character": 13
														}
													],
													"type": {
														"type": "reference",
														"name": "AppConfig",
														"id": 888
													}
												},
												{
													"id": 1898,
													"name": "sessionOptions",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/auth/userSession.ts",
															"line": 52,
															"character": 18
														}
													],
													"type": {
														"type": "reference",
														"name": "SessionOptions",
														"id": 1133
													}
												},
												{
													"id": 1897,
													"name": "sessionStore",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/auth/userSession.ts",
															"line": 51,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"name": "SessionDataStore",
														"id": 1159
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1896,
														1898,
														1897
													]
												}
											],
											"sources": [
												{
													"fileName": "src/auth/userSession.ts",
													"line": 49,
													"character": 23
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 42,
							"character": 25
						}
					]
				},
				{
					"id": 1890,
					"name": "appConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 40,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "AppConfig",
						"id": 888
					}
				},
				{
					"id": 1891,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 42,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "SessionDataStore",
						"id": 1159
					}
				},
				{
					"id": 1937,
					"name": "decryptContent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1938,
							"name": "decryptContent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Decrypts data encrypted with `encryptContent` with the\ntransit private key.",
								"returns": "decrypted content.\n"
							},
							"parameters": [
								{
									"id": 1939,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "encrypted content."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1940,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1941,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1942,
													"name": "privateKey",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The hex string of the ECDSA private\nkey to use for decryption. If not provided, will use user's appPrivateKey."
													},
													"sources": [
														{
															"fileName": "src/auth/userSession.ts",
															"line": 283,
															"character": 55
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1942
													]
												}
											],
											"sources": [
												{
													"fileName": "src/auth/userSession.ts",
													"line": 283,
													"character": 43
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Buffer"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 283,
							"character": 16
						}
					]
				},
				{
					"id": 1962,
					"name": "deleteFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1963,
							"name": "deleteFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes the specified file from the app's data store.",
								"returns": "Resolves when the file has been removed or rejects with an error.\n"
							},
							"parameters": [
								{
									"id": 1964,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The path to the file to delete."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1965,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional options object."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1966,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1967,
													"name": "wasSigned",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Set to true if the file was originally signed\nin order for the corresponding signature file to also be deleted."
													},
													"sources": [
														{
															"fileName": "src/auth/userSession.ts",
															"line": 348,
															"character": 55
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1967
													]
												}
											],
											"sources": [
												{
													"fileName": "src/auth/userSession.ts",
													"line": 348,
													"character": 43
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 348,
							"character": 19
						}
					]
				},
				{
					"id": 1933,
					"name": "encryptContent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1934,
							"name": "encryptContent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Encrypts the data provided with the app public key.",
								"returns": "Stringified ciphertext object\n"
							},
							"parameters": [
								{
									"id": 1935,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the data to encrypt"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								},
								{
									"id": 1936,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EncryptContentOptions",
										"id": 1743
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 268,
							"character": 16
						}
					]
				},
				{
					"id": 1917,
					"name": "generateAndStoreTransitKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1918,
							"name": "generateAndStoreTransitKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a ECDSA keypair to\nuse as the ephemeral app transit private key\nand store in the session.",
								"returns": "the hex encoded private key\n\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 189,
							"character": 28
						}
					]
				},
				{
					"id": 1919,
					"name": "getAuthResponseToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1920,
							"name": "getAuthResponseToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve the authentication token from the URL query.",
								"returns": "the authentication token if it exists otherwise `null`\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 202,
							"character": 22
						}
					]
				},
				{
					"id": 1948,
					"name": "getFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1949,
							"name": "getFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves the specified file from the app's data store.",
								"returns": "that resolves to the raw data in the file\nor rejects with an error\n"
							},
							"parameters": [
								{
									"id": 1950,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to the file to read"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1951,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "a [[GetFileOptions]] object\n"
									},
									"type": {
										"type": "reference",
										"name": "GetFileOptions",
										"id": 1758
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "ArrayBuffer"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 313,
							"character": 9
						}
					]
				},
				{
					"id": 1952,
					"name": "getFileUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1953,
							"name": "getFileUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the URL for reading a file from an app's data store.",
								"returns": "that resolves to the URL or rejects with an error\n"
							},
							"parameters": [
								{
									"id": 1954,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to the file to read\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1955,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "GetFileUrlOptions",
										"id": 1754
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 324,
							"character": 12
						}
					]
				},
				{
					"id": 1968,
					"name": "getOrSetLocalGaiaHubConnection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1969,
							"name": "getOrSetLocalGaiaHubConnection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": " @ignore"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "GaiaHubConfig",
										"id": 776
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 356,
							"character": 32
						}
					]
				},
				{
					"id": 1925,
					"name": "handlePendingSignIn",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1926,
							"name": "handlePendingSignIn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to process any pending sign in request by returning a `Promise` that resolves\nto the user data object if the sign in succeeds.",
								"returns": "that resolves to the user data object if successful and rejects\nif handling the sign in request fails or there was no pending sign in request.\n"
							},
							"parameters": [
								{
									"id": 1927,
									"name": "authResponseToken",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the signed authentication response token"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " this.getAuthResponseToken()"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "UserData",
										"id": 2026
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 232,
							"character": 21
						}
					]
				},
				{
					"id": 1921,
					"name": "isSignInPending",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1922,
							"name": "isSignInPending",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if there is a authentication request that hasn't been handled.",
								"tags": [
									{
										"tag": "returns{boolean}",
										"text": "`true` if there is a pending sign in, otherwise `false`\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 211,
							"character": 17
						}
					]
				},
				{
					"id": 1923,
					"name": "isUserSignedIn",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1924,
							"name": "isUserSignedIn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a user is currently signed in.",
								"returns": "`true` if the user is signed in, `false` if not.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 220,
							"character": 16
						}
					]
				},
				{
					"id": 1956,
					"name": "listFiles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1957,
							"name": "listFiles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "List the set of files in this application's Gaia storage bucket.",
								"returns": "that resolves to the number of files listed\n"
							},
							"parameters": [
								{
									"id": 1958,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a callback to invoke on each named file that\nreturns `true` to continue the listing operation or `false` to end it\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1959,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1960,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1961,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/auth/userSession.ts",
													"line": 336,
													"character": 21
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 336,
							"character": 11
						}
					]
				},
				{
					"id": 1928,
					"name": "loadUserData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1929,
							"name": "loadUserData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves the user data object. The user's profile is stored in the key [[Profile]].",
								"returns": "User data object.\n"
							},
							"type": {
								"type": "reference",
								"name": "UserData",
								"id": 2026
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 242,
							"character": 14
						}
					]
				},
				{
					"id": 1908,
					"name": "makeAuthRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1909,
							"name": "makeAuthRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates an authentication request that can be sent to the Blockstack\nbrowser for the user to approve sign in. This authentication request can\nthen be used for sign in by passing it to the [[redirectToSignInWithAuthRequest]]\nmethod.",
								"text": "*Note*: This method should only be used if you want to use a customized authentication\nflow. Typically, you'd use [[redirectToSignIn]] which is the default sign in method.\n",
								"returns": "the authentication request\n"
							},
							"parameters": [
								{
									"id": 1910,
									"name": "transitKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "A HEX encoded transit private key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1911,
									"name": "redirectURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Location to redirect the user to after sign in approval."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1912,
									"name": "manifestURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Location of this app's manifest file."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1913,
									"name": "scopes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The permissions this app is requesting. The default is `store_write`."
									},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "AuthScope",
														"id": 1
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										]
									}
								},
								{
									"id": 1914,
									"name": "appDomain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The origin of the app."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1915,
									"name": "expiresAt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The time at which this request is no longer valid."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": " nextHour().getTime()"
								},
								{
									"id": 1916,
									"name": "extraParams",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Any extra parameters to pass to the authenticator. Use this to\npass options that aren't part of the Blockstack authentication specification,\nbut might be supported by special authenticators.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 158,
							"character": 17
						}
					]
				},
				{
					"id": 1943,
					"name": "putFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1944,
							"name": "putFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stores the data provided in the app's data store to to the file specified.",
								"returns": "that resolves if the operation succeed and rejects\nif it failed\n"
							},
							"parameters": [
								{
									"id": 1945,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path to store the data in"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1946,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the data to store in the file"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											},
											{
												"type": "reference",
												"name": "ArrayBufferView"
											},
											{
												"type": "reference",
												"name": "Blob"
											}
										]
									}
								},
								{
									"id": 1947,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "a [[PutFileOptions]] object\n"
									},
									"type": {
										"type": "reference",
										"name": "PutFileOptions",
										"id": 1748
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 296,
							"character": 9
						}
					]
				},
				{
					"id": 1899,
					"name": "redirectToSignIn",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1900,
							"name": "redirectToSignIn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates an authentication request and redirects the user to the Blockstack\nbrowser to approve the sign in request.",
								"text": "Please note that this requires that the web browser properly handles the\n`blockstack:` URL protocol handler.\n\nMost applications should use this\nmethod for sign in unless they require more fine grained control over how the\nauthentication request is generated. If your app falls into this category,\nuse [[generateAndStoreTransitKey]], [[makeAuthRequest]],\nand [[redirectToSignInWithAuthRequest]] to build your own sign in process.\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 1901,
									"name": "redirectURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Location of your application."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1902,
									"name": "manifestURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Location of the manifest.json file"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1903,
									"name": "scopes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Permissions requested by the application. Possible values are\n `store_write` (default) or `publish_data`.\n"
									},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "AuthScope",
														"id": 1
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 104,
							"character": 18
						}
					]
				},
				{
					"id": 1904,
					"name": "redirectToSignInWithAuthRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1905,
							"name": "redirectToSignInWithAuthRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Redirects the user to the Blockstack browser to approve the sign in request.\nTo construct a request see the [[makeAuthRequest]] function.",
								"text": "The user is redirected to the authenticator URL specified in the `AppConfig`\nif the `blockstack:` protocol handler is not detected.\nPlease note that the protocol handler detection does not work on all browsers.\n"
							},
							"parameters": [
								{
									"id": 1906,
									"name": "authRequest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "A request string built by the [[makeAuthRequest]] function"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1907,
									"name": "blockstackIDHost",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The ID of the Blockstack Browser application.\n\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 127,
							"character": 33
						}
					]
				},
				{
					"id": 1970,
					"name": "setLocalGaiaHubConnection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1971,
							"name": "setLocalGaiaHubConnection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "These two functions are app-specific connections to gaia hub,\n  they read the user data object for information on setting up\n  a hub connection, and store the hub config to localstorage",
								"returns": "that resolves to the new gaia hub connection\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "GaiaHubConfig",
										"id": 776
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 376,
							"character": 33
						}
					]
				},
				{
					"id": 1930,
					"name": "signUserOut",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1931,
							"name": "signUserOut",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sign the user out and optionally redirect to given location."
							},
							"parameters": [
								{
									"id": 1932,
									"name": "redirectURL",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Location to redirect user to after sign out.\nOnly used in environments with `window` available\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/auth/userSession.ts",
							"line": 256,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1892
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1890,
						1891
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1937,
						1962,
						1933,
						1917,
						1919,
						1948,
						1952,
						1968,
						1925,
						1921,
						1923,
						1956,
						1928,
						1908,
						1943,
						1899,
						1904,
						1970,
						1930
					]
				}
			],
			"sources": [
				{
					"fileName": "src/auth/userSession.ts",
					"line": 39,
					"character": 24
				}
			]
		},
		{
			"id": 1018,
			"name": "WebCryptoAesCipher",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1020,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1021,
							"name": "new WebCryptoAesCipher",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1022,
									"name": "subtleCrypto",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SubtleCrypto"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WebCryptoAesCipher",
								"id": 1018
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 62,
							"character": 28
						}
					]
				},
				{
					"id": 1019,
					"name": "subtleCrypto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 62,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "SubtleCrypto"
					}
				},
				{
					"id": 1029,
					"name": "decrypt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1030,
							"name": "decrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1031,
									"name": "algorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CipherAlgorithm",
										"id": 1037
									}
								},
								{
									"id": 1032,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 1033,
									"name": "iv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 1034,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "AesCipher.decrypt",
								"id": 994
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 94,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "AesCipher.decrypt",
						"id": 993
					}
				},
				{
					"id": 1023,
					"name": "encrypt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1024,
							"name": "encrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1025,
									"name": "algorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CipherAlgorithm",
										"id": 1037
									}
								},
								{
									"id": 1026,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 1027,
									"name": "iv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 1028,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "AesCipher.encrypt",
								"id": 988
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 68,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "AesCipher.encrypt",
						"id": 987
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1020
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1019
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1029,
						1023
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/aesCipher.ts",
					"line": 61,
					"character": 31
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "AesCipher",
					"id": 986
				}
			]
		},
		{
			"id": 974,
			"name": "WebCryptoHmacSha256",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 976,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 977,
							"name": "new WebCryptoHmacSha256",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 978,
									"name": "subtleCrypto",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SubtleCrypto"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WebCryptoHmacSha256",
								"id": 974
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/hmacSha256.ts",
							"line": 25,
							"character": 28
						}
					]
				},
				{
					"id": 975,
					"name": "subtleCrypto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/hmacSha256.ts",
							"line": 25,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "SubtleCrypto"
					}
				},
				{
					"id": 979,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 980,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 981,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 982,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Hmac.digest",
								"id": 962
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/hmacSha256.ts",
							"line": 31,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Hmac.digest",
						"id": 961
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						976
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						975
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						979
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/hmacSha256.ts",
					"line": 24,
					"character": 32
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Hmac",
					"id": 960
				}
			]
		},
		{
			"id": 2123,
			"name": "WebCryptoPartialPbkdf2",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2125,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2126,
							"name": "new WebCryptoPartialPbkdf2",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2127,
									"name": "subtleCrypto",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SubtleCrypto"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WebCryptoPartialPbkdf2",
								"id": 2123
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 90,
							"character": 28
						}
					]
				},
				{
					"id": 2124,
					"name": "subtleCrypto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 90,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "SubtleCrypto"
					}
				},
				{
					"id": 2128,
					"name": "derive",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2129,
							"name": "derive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2130,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2131,
									"name": "salt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 2132,
									"name": "iterations",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2133,
									"name": "keyLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2134,
									"name": "digest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Pbkdf2Digests",
										"id": 2135
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Pbkdf2.derive",
								"id": 2093
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 96,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Pbkdf2.derive",
						"id": 2092
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2125
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2124
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2128
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/pbkdf2.ts",
					"line": 84,
					"character": 35
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Pbkdf2",
					"id": 2091
				}
			]
		},
		{
			"id": 2111,
			"name": "WebCryptoPbkdf2",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2113,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2114,
							"name": "new WebCryptoPbkdf2",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2115,
									"name": "subtleCrypto",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SubtleCrypto"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WebCryptoPbkdf2",
								"id": 2111
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 45,
							"character": 28
						}
					]
				},
				{
					"id": 2112,
					"name": "subtleCrypto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 45,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "SubtleCrypto"
					}
				},
				{
					"id": 2116,
					"name": "derive",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2117,
							"name": "derive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2118,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2119,
									"name": "salt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 2120,
									"name": "iterations",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2121,
									"name": "keyLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2122,
									"name": "digest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Pbkdf2Digests",
										"id": 2135
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Pbkdf2.derive",
								"id": 2093
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 51,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Pbkdf2.derive",
						"id": 2092
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2113
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2112
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2116
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/pbkdf2.ts",
					"line": 44,
					"character": 28
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Pbkdf2",
					"id": 2091
				}
			]
		},
		{
			"id": 343,
			"name": "WebCryptoSha2Hash",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 345,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 346,
							"name": "new WebCryptoSha2Hash",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 347,
									"name": "subtleCrypto",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SubtleCrypto"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WebCryptoSha2Hash",
								"id": 343
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/sha2Hash.ts",
							"line": 32,
							"character": 28
						}
					]
				},
				{
					"id": 344,
					"name": "subtleCrypto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/sha2Hash.ts",
							"line": 32,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "SubtleCrypto"
					}
				},
				{
					"id": 348,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 349,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 350,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 351,
									"name": "algorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"sha256\""
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/sha2Hash.ts",
							"line": 38,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Sha2Hash.digest",
						"id": 330
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						345
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						344
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						348
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/sha2Hash.ts",
					"line": 31,
					"character": 30
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Sha2Hash",
					"id": 329
				}
			]
		},
		{
			"id": 1427,
			"name": "AccountProofInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1429,
					"name": "identifier",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/profiles/profileProofs.ts",
							"line": 6,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1430,
					"name": "proof_url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/profiles/profileProofs.ts",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1428,
					"name": "service",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/profiles/profileProofs.ts",
							"line": 5,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1431,
					"name": "valid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/profiles/profileProofs.ts",
							"line": 8,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1429,
						1430,
						1428,
						1431
					]
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profileProofs.ts",
					"line": 4,
					"character": 33
				}
			]
		},
		{
			"id": 390,
			"name": "AccountTokens",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 391,
					"name": "tokens",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 24,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						391
					]
				}
			],
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 23,
					"character": 30
				}
			]
		},
		{
			"id": 986,
			"name": "AesCipher",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 993,
					"name": "decrypt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 994,
							"name": "decrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 995,
									"name": "algorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CipherAlgorithm",
										"id": 1037
									}
								},
								{
									"id": 996,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 997,
									"name": "iv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 998,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 15,
							"character": 9
						}
					]
				},
				{
					"id": 987,
					"name": "encrypt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 988,
							"name": "encrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 989,
									"name": "algorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CipherAlgorithm",
										"id": 1037
									}
								},
								{
									"id": 990,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 991,
									"name": "iv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 992,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/aesCipher.ts",
							"line": 9,
							"character": 9
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						993,
						987
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/aesCipher.ts",
					"line": 8,
					"character": 26
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "NodeCryptoAesCipher",
					"id": 999
				},
				{
					"type": "reference",
					"name": "WebCryptoAesCipher",
					"id": 1018
				}
			]
		},
		{
			"id": 1743,
			"name": "EncryptContentOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Specify encryption options, and whether to sign the ciphertext."
			},
			"children": [
				{
					"id": 1746,
					"name": "cipherTextEncoding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "String encoding format for the cipherText buffer.\nCurrently defaults to 'hex' for legacy backwards-compatibility.\nOnly used if the `encrypt` option is also used.\nNote: in the future this should default to 'base64' for the significant\nfile size reduction."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 48,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "CipherTextEncoding"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EncryptionOptions.cipherTextEncoding",
						"id": 1741
					}
				},
				{
					"id": 1744,
					"name": "publicKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Encrypt the data with this key.\nIf not provided then the current user's app public key is used."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 66,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1745,
					"name": "sign",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\napp private key. If a string is specified, it is used as the private key instead\nof the user's app private key.",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 40,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EncryptionOptions.sign",
						"id": 1740
					}
				},
				{
					"id": 1747,
					"name": "wasString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies if the original unencrypted content is a ASCII or UTF-8 string.\nFor example stringified JSON.\nIf true, then when the ciphertext is decrypted, it will be returned as\na `string` type variable, otherwise will be returned as a Buffer."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 55,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EncryptionOptions.wasString",
						"id": 1742
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1746,
						1744,
						1745,
						1747
					]
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 61,
					"character": 38
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "EncryptionOptions",
					"id": 1739
				}
			]
		},
		{
			"id": 1739,
			"name": "EncryptionOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1741,
					"name": "cipherTextEncoding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "String encoding format for the cipherText buffer.\nCurrently defaults to 'hex' for legacy backwards-compatibility.\nOnly used if the `encrypt` option is also used.\nNote: in the future this should default to 'base64' for the significant\nfile size reduction."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 48,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "CipherTextEncoding"
					}
				},
				{
					"id": 1740,
					"name": "sign",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\napp private key. If a string is specified, it is used as the private key instead\nof the user's app private key.",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 40,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1742,
					"name": "wasString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies if the original unencrypted content is a ASCII or UTF-8 string.\nFor example stringified JSON.\nIf true, then when the ciphertext is decrypted, it will be returned as\na `string` type variable, otherwise will be returned as a Buffer."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 55,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1741,
						1740,
						1742
					]
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 33,
					"character": 34
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "EncryptContentOptions",
					"id": 1743
				},
				{
					"type": "reference",
					"name": "PutFileOptions",
					"id": 1748
				}
			]
		},
		{
			"id": 776,
			"name": "GaiaHubConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The configuration for the user's Gaia storage provider."
			},
			"children": [
				{
					"id": 777,
					"name": "address",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/storage/hub.ts",
							"line": 20,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 780,
					"name": "max_file_upload_size_megabytes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/storage/hub.ts",
							"line": 23,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 781,
					"name": "server",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/storage/hub.ts",
							"line": 24,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 779,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/storage/hub.ts",
							"line": 22,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 778,
					"name": "url_prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/storage/hub.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						777,
						780,
						781,
						779,
						778
					]
				}
			],
			"sources": [
				{
					"fileName": "src/storage/hub.ts",
					"line": 19,
					"character": 30
				}
			]
		},
		{
			"id": 1758,
			"name": "GetFileOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Used to pass options to [[UserSession.getFile]]"
			},
			"children": [
				{
					"id": 1762,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The app to lookup for multi-player storage - defaults to current origin.",
						"tags": [
							{
								"tag": "default",
								"text": "`window.location.origin`\nOnly if available in the executing environment, otherwise `undefined`.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 483,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GetFileUrlOptions.app",
						"id": 1756
					}
				},
				{
					"id": 1759,
					"name": "decrypt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Try to decrypt the data with the app private key.\nIf a string is specified, it is used as the private key.",
						"tags": [
							{
								"tag": "default",
								"text": "true\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 500,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1761,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The Blockstack ID to lookup for multi-player storage.\nIf not specified, the currently signed in username is used."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 477,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GetFileUrlOptions.username",
						"id": 1755
					}
				},
				{
					"id": 1760,
					"name": "verify",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the content should be verified, only to be used\nwhen [[UserSession.putFile]] was set to `sign = true`.",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 506,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1763,
					"name": "zoneFileLookupURL",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The URL to use for zonefile lookup. If falsey, this will use\nthe blockstack.js's [[getNameInfo]] function instead."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 488,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GetFileUrlOptions.zoneFileLookupURL",
						"id": 1757
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1762,
						1759,
						1761,
						1760,
						1763
					]
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 494,
					"character": 31
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "GetFileUrlOptions",
					"id": 1754
				}
			]
		},
		{
			"id": 1754,
			"name": "GetFileUrlOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1756,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The app to lookup for multi-player storage - defaults to current origin.",
						"tags": [
							{
								"tag": "default",
								"text": "`window.location.origin`\nOnly if available in the executing environment, otherwise `undefined`.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 483,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1755,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The Blockstack ID to lookup for multi-player storage.\nIf not specified, the currently signed in username is used."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 477,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1757,
					"name": "zoneFileLookupURL",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The URL to use for zonefile lookup. If falsey, this will use\nthe blockstack.js's [[getNameInfo]] function instead."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 488,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1756,
						1755,
						1757
					]
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 472,
					"character": 34
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "GetFileOptions",
					"id": 1758
				}
			]
		},
		{
			"id": 821,
			"name": "GetGlobalObjectOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 824,
					"name": "returnEmptyObject",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If the object is not found, return an new empty object instead of undefined.\nRequires [[throwIfUnavailable]] to be falsey.",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/utils.ts",
							"line": 262,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 822,
					"name": "throwIfUnavailable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Throw an error if the object is not found.",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/utils.ts",
							"line": 252,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 823,
					"name": "usageDesc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Additional information to include in an error if thrown."
					},
					"sources": [
						{
							"fileName": "src/utils.ts",
							"line": 256,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						824,
						822,
						823
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils.ts",
					"line": 247,
					"character": 32
				}
			]
		},
		{
			"id": 960,
			"name": "Hmac",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 961,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 962,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 963,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 964,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/hmacSha256.ts",
							"line": 4,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						961
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/hmacSha256.ts",
					"line": 3,
					"character": 21
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "NodeCryptoHmacSha256",
					"id": 965
				},
				{
					"type": "reference",
					"name": "WebCryptoHmacSha256",
					"id": 974
				}
			]
		},
		{
			"id": 159,
			"name": "HubErrorDetails",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 163,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 164,
							"name": "prop",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"children": [
				{
					"id": 160,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/errors.ts",
							"line": 217,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 161,
					"name": "statusCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/errors.ts",
							"line": 218,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 162,
					"name": "statusText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/errors.ts",
							"line": 219,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						160,
						161,
						162
					]
				}
			],
			"sources": [
				{
					"fileName": "src/errors.ts",
					"line": 216,
					"character": 32
				}
			]
		},
		{
			"id": 302,
			"name": "NodeCryptoLib",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 303,
					"name": "lib",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/cryptoUtils.ts",
							"line": 44,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "\"crypto\""
					}
				},
				{
					"id": 304,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/cryptoUtils.ts",
							"line": 45,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "nodeCrypto"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						303,
						304
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/cryptoUtils.ts",
					"line": 43,
					"character": 30
				}
			]
		},
		{
			"id": 2091,
			"name": "Pbkdf2",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2092,
					"name": "derive",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2093,
							"name": "derive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2094,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2095,
									"name": "salt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 2096,
									"name": "iterations",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2097,
									"name": "keyLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2098,
									"name": "digest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Pbkdf2Digests",
										"id": 2135
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/pbkdf2.ts",
							"line": 6,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2092
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/pbkdf2.ts",
					"line": 5,
					"character": 23
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "NodeCryptoPbkdf2",
					"id": 2099
				},
				{
					"type": "reference",
					"name": "WebCryptoPartialPbkdf2",
					"id": 2123
				},
				{
					"type": "reference",
					"name": "WebCryptoPbkdf2",
					"id": 2111
				}
			]
		},
		{
			"id": 387,
			"name": "PriceInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 389,
					"name": "amount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 20,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "BN"
					}
				},
				{
					"id": 388,
					"name": "units",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 19,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						389,
						388
					]
				}
			],
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 18,
					"character": 26
				}
			]
		},
		{
			"id": 1748,
			"name": "PutFileOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Specify a valid MIME type, encryption options, and whether to sign the [[UserSession.putFile]]."
			},
			"children": [
				{
					"id": 1752,
					"name": "cipherTextEncoding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "String encoding format for the cipherText buffer.\nCurrently defaults to 'hex' for legacy backwards-compatibility.\nOnly used if the `encrypt` option is also used.\nNote: in the future this should default to 'base64' for the significant\nfile size reduction."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 48,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "CipherTextEncoding"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EncryptionOptions.cipherTextEncoding",
						"id": 1741
					}
				},
				{
					"id": 1749,
					"name": "contentType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the Content-Type header for unencrypted data.\nIf the `encrypt` is enabled, this option is ignored, and the\nContent-Type header is set to `application/json` for the ciphertext\nJSON envelope."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 79,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1750,
					"name": "encrypt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Encrypt the data with the app public key.\nIf a string is specified, it is used as the public key.\nIf the boolean `true` is specified then the current user's app public key is used.",
						"tags": [
							{
								"tag": "default",
								"text": "true\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 86,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1751,
					"name": "sign",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\napp private key. If a string is specified, it is used as the private key instead\nof the user's app private key.",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 40,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EncryptionOptions.sign",
						"id": 1740
					}
				},
				{
					"id": 1753,
					"name": "wasString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies if the original unencrypted content is a ASCII or UTF-8 string.\nFor example stringified JSON.\nIf true, then when the ciphertext is decrypted, it will be returned as\na `string` type variable, otherwise will be returned as a Buffer."
					},
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 55,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EncryptionOptions.wasString",
						"id": 1742
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1752,
						1749,
						1750,
						1751,
						1753
					]
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 72,
					"character": 31
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "EncryptionOptions",
					"id": 1739
				}
			]
		},
		{
			"id": 361,
			"name": "Ripemd160Digest",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 362,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 363,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 364,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/hashRipemd160.ts",
							"line": 7,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						362
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/hashRipemd160.ts",
					"line": 6,
					"character": 32
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "NodeCryptoRipemd160Digest",
					"id": 369
				},
				{
					"type": "reference",
					"name": "Ripemd160PolyfillDigest",
					"id": 365
				}
			]
		},
		{
			"id": 1133,
			"name": "SessionOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1134,
					"name": "coreNode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/auth/sessionData.ts",
							"line": 9,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1137,
					"name": "localStorageKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/auth/sessionData.ts",
							"line": 12,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1138,
					"name": "storeOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/auth/sessionData.ts",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1139,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1140,
									"name": "localStorageKey",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/auth/sessionData.ts",
											"line": 14,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1140
									]
								}
							],
							"sources": [
								{
									"fileName": "src/auth/sessionData.ts",
									"line": 13,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 1136,
					"name": "transitKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/auth/sessionData.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1135,
					"name": "userData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/auth/sessionData.ts",
							"line": 10,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "UserData",
						"id": 2026
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1134,
						1137,
						1138,
						1136,
						1135
					]
				}
			],
			"sources": [
				{
					"fileName": "src/auth/sessionData.ts",
					"line": 8,
					"character": 31
				}
			]
		},
		{
			"id": 329,
			"name": "Sha2Hash",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 330,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 331,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 332,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 333,
									"name": "algorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "sha256"
											},
											{
												"type": "stringLiteral",
												"value": "sha512"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/sha2Hash.ts",
							"line": 7,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						330
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/sha2Hash.ts",
					"line": 6,
					"character": 25
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "WebCryptoSha2Hash",
					"id": 343
				}
			]
		},
		{
			"id": 392,
			"name": "TransactionInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 394,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 395,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"children": [
				{
					"id": 393,
					"name": "block_height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 28,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						393
					]
				}
			],
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 27,
					"character": 32
				}
			]
		},
		{
			"id": 382,
			"name": "UTXO",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 384,
					"name": "confirmations",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 13,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 385,
					"name": "tx_hash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 386,
					"name": "tx_output_n",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 15,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 383,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/network.ts",
							"line": 12,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						384,
						385,
						386,
						383
					]
				}
			],
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 11,
					"character": 21
				}
			]
		},
		{
			"id": 782,
			"name": "UploadResponse",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 784,
					"name": "etag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/storage/hub.ts",
							"line": 29,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 783,
					"name": "publicURL",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/storage/hub.ts",
							"line": 28,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						784,
						783
					]
				}
			],
			"sources": [
				{
					"fileName": "src/storage/hub.ts",
					"line": 27,
					"character": 24
				}
			]
		},
		{
			"id": 2026,
			"name": "UserData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": " Returned from the [[UserSession.loadUserData]] function."
			},
			"children": [
				{
					"id": 2031,
					"name": "appPrivateKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 53,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2034,
					"name": "authResponseToken",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 59,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2033,
					"name": "coreNode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 57,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2035,
					"name": "coreSessionToken",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 61,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2029,
					"name": "decentralizedID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 46,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2028,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 43,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2036,
					"name": "gaiaAssociationToken",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 63,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2038,
					"name": "gaiaHubConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 68,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "GaiaHubConfig",
						"id": 776
					}
				},
				{
					"id": 2032,
					"name": "hubUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 56,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2030,
					"name": "identityAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 49,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2037,
					"name": "profile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2027,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 36,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2031,
						2034,
						2033,
						2035,
						2029,
						2028,
						2036,
						2038,
						2032,
						2030,
						2037,
						2027
					]
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 34,
					"character": 25
				}
			]
		},
		{
			"id": 299,
			"name": "WebCryptoLib",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 300,
					"name": "lib",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/cryptoUtils.ts",
							"line": 39,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "SubtleCrypto"
					}
				},
				{
					"id": 301,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/encryption/cryptoUtils.ts",
							"line": 40,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "subtleCrypto"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						300,
						301
					]
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/cryptoUtils.ts",
					"line": 38,
					"character": 29
				}
			]
		},
		{
			"id": 2365,
			"name": "AmountType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/operations/skeletons.ts",
					"line": 13,
					"character": 15
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "AmountTypeV1",
						"id": 2360
					},
					{
						"type": "reference",
						"name": "AmountTypeV2",
						"id": 2361
					}
				]
			}
		},
		{
			"id": 2360,
			"name": "AmountTypeV1",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/operations/skeletons.ts",
					"line": 11,
					"character": 17
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			}
		},
		{
			"id": 2361,
			"name": "AmountTypeV2",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/operations/skeletons.ts",
					"line": 12,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2362,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 2364,
							"name": "amount",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "src/operations/skeletons.ts",
									"line": 12,
									"character": 43
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2363,
							"name": "units",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "src/operations/skeletons.ts",
									"line": 12,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								2364,
								2363
							]
						}
					],
					"sources": [
						{
							"fileName": "src/operations/skeletons.ts",
							"line": 12,
							"character": 19
						}
					]
				}
			}
		},
		{
			"id": 1973,
			"name": "AuthMetadata",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/auth/authMessages.ts",
					"line": 16,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1974,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1975,
							"name": "email",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/auth/authMessages.ts",
									"line": 17,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1976,
							"name": "profileUrl",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/auth/authMessages.ts",
									"line": 18,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1975,
								1976
							]
						}
					],
					"sources": [
						{
							"fileName": "src/auth/authMessages.ts",
							"line": 16,
							"character": 19
						}
					]
				}
			}
		},
		{
			"id": 1251,
			"name": "CheerioModuleType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/profiles/services/service.ts",
					"line": 5,
					"character": 29
				}
			],
			"type": {
				"type": "reference",
				"name": "CheerioAPI"
			}
		},
		{
			"id": 1037,
			"name": "CipherAlgorithm",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/encryption/aesCipher.ts",
					"line": 6,
					"character": 27
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "aes-256-cbc"
					},
					{
						"type": "stringLiteral",
						"value": "aes-128-cbc"
					}
				]
			}
		},
		{
			"id": 752,
			"name": "GetRandomBytes",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Optional function to generate cryptographically secure random bytes"
			},
			"sources": [
				{
					"fileName": "src/encryption/cryptoRandom.ts",
					"line": 6,
					"character": 26
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 753,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 754,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 755,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/cryptoRandom.ts",
							"line": 6,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 1035,
			"name": "NodeCryptoCreateCipher",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/encryption/aesCipher.ts",
					"line": 3,
					"character": 27
				}
			],
			"type": {
				"type": "reference",
				"name": "createCipheriv"
			}
		},
		{
			"id": 1036,
			"name": "NodeCryptoCreateDecipher",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/encryption/aesCipher.ts",
					"line": 4,
					"character": 29
				}
			],
			"type": {
				"type": "reference",
				"name": "createDecipheriv"
			}
		},
		{
			"id": 352,
			"name": "NodeCryptoCreateHash",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/encryption/sha2Hash.ts",
					"line": 4,
					"character": 25
				},
				{
					"fileName": "src/encryption/hashRipemd160.ts",
					"line": 4,
					"character": 25
				}
			],
			"type": {
				"type": "reference",
				"name": "createHash"
			}
		},
		{
			"id": 983,
			"name": "NodeCryptoCreateHmac",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/encryption/hmacSha256.ts",
					"line": 7,
					"character": 25
				}
			],
			"type": {
				"type": "reference",
				"name": "createHmac"
			}
		},
		{
			"id": 2136,
			"name": "NodePbkdf2Fn",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/encryption/pbkdf2.ts",
					"line": 14,
					"character": 17
				}
			],
			"type": {
				"type": "reference",
				"name": "pbkdf2"
			}
		},
		{
			"id": 2135,
			"name": "Pbkdf2Digests",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/encryption/pbkdf2.ts",
					"line": 3,
					"character": 25
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "sha512"
					},
					{
						"type": "stringLiteral",
						"value": "sha256"
					}
				]
			}
		},
		{
			"id": 315,
			"name": "TriplesecDecryptSignature",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/encryption/cryptoUtils.ts",
					"line": 34,
					"character": 37
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 316,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 317,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 318,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 319,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 320,
													"name": "data",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/encryption/cryptoUtils.ts",
															"line": 35,
															"character": 13
														}
													],
													"type": {
														"type": "reference",
														"name": "Buffer"
													}
												},
												{
													"id": 321,
													"name": "key",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/encryption/cryptoUtils.ts",
															"line": 35,
															"character": 26
														}
													],
													"type": {
														"type": "reference",
														"name": "Buffer"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														320,
														321
													]
												}
											],
											"sources": [
												{
													"fileName": "src/encryption/cryptoUtils.ts",
													"line": 35,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 322,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 323,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 324,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 325,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Error"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														},
														{
															"id": 326,
															"name": "buff",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Buffer"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/encryption/cryptoUtils.ts",
													"line": 35,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/encryption/cryptoUtils.ts",
							"line": 34,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 2276,
			"name": "txPoint",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 45,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2277,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 2278,
							"name": "script",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "src/operations/utils.ts",
									"line": 46,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2279,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2280,
											"name": "length",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/operations/utils.ts",
													"line": 46,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2280
											]
										}
									],
									"sources": [
										{
											"fileName": "src/operations/utils.ts",
											"line": 46,
											"character": 9
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								2278
							]
						}
					],
					"sources": [
						{
							"fileName": "src/operations/utils.ts",
							"line": 45,
							"character": 14
						}
					]
				}
			}
		},
		{
			"id": 2784,
			"name": "APPS_NODE_INDEX",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/wallet.ts",
					"line": 9,
					"character": 21
				}
			],
			"type": {
				"type": "unknown",
				"name": "0"
			},
			"defaultValue": "0"
		},
		{
			"id": 2011,
			"name": "AUTH_CONTINUATION_PARAM",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/auth/protocolEchoDetection.ts",
					"line": 10,
					"character": 29
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "authContinuation"
			},
			"defaultValue": "\"authContinuation\""
		},
		{
			"id": 2789,
			"name": "BITCOIN_ACCOUNT_INDEX",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/wallet.ts",
					"line": 15,
					"character": 27
				}
			],
			"type": {
				"type": "unknown",
				"name": "0"
			},
			"defaultValue": "0"
		},
		{
			"id": 2787,
			"name": "BITCOIN_BIP_44_PURPOSE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/wallet.ts",
					"line": 13,
					"character": 28
				}
			],
			"type": {
				"type": "unknown",
				"name": "44"
			},
			"defaultValue": "44"
		},
		{
			"id": 2788,
			"name": "BITCOIN_COIN_TYPE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/wallet.ts",
					"line": 14,
					"character": 23
				}
			],
			"type": {
				"type": "unknown",
				"name": "0"
			},
			"defaultValue": "0"
		},
		{
			"id": 2786,
			"name": "BLOCKSTACK_ON_BITCOIN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/wallet.ts",
					"line": 11,
					"character": 27
				}
			],
			"type": {
				"type": "unknown",
				"name": "0"
			},
			"defaultValue": "0"
		},
		{
			"id": 2791,
			"name": "CHANGE_ADDRESS",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/wallet.ts",
					"line": 18,
					"character": 20
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "CHANGE_ADDRESS"
			},
			"defaultValue": "\"CHANGE_ADDRESS\""
		},
		{
			"id": 7,
			"name": "DEFAULT_BLOCKSTACK_HOST",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "This constant is used in the [[redirectToSignInWithAuthRequest]]"
			},
			"sources": [
				{
					"fileName": "src/auth/authConstants.ts",
					"line": 13,
					"character": 36
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "https://browser.blockstack.org/auth"
			},
			"defaultValue": "\"https://browser.blockstack.org/auth\""
		},
		{
			"id": 2010,
			"name": "ECHO_REPLY_PARAM",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/auth/protocolEchoDetection.ts",
					"line": 9,
					"character": 22
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "echoReply"
			},
			"defaultValue": "\"echoReply\""
		},
		{
			"id": 2790,
			"name": "EXTERNAL_ADDRESS",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/wallet.ts",
					"line": 17,
					"character": 22
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "EXTERNAL_ADDRESS"
			},
			"defaultValue": "\"EXTERNAL_ADDRESS\""
		},
		{
			"id": 2009,
			"name": "GLOBAL_DETECTION_CACHE_KEY",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "This logic is in a separate file with no dependencies so that it can be\nloaded and executed as soon as possible to fulfill the purpose of the protocol\ndetection technique. The effectiveness of this is obviously subject to how web\napps bundle/consume the blockstack.js lib."
			},
			"sources": [
				{
					"fileName": "src/auth/protocolEchoDetection.ts",
					"line": 8,
					"character": 32
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "_blockstackDidCheckEchoReply"
			},
			"defaultValue": "\"_blockstackDidCheckEchoReply\""
		},
		{
			"id": 2785,
			"name": "IDENTITY_KEYCHAIN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/wallet.ts",
					"line": 10,
					"character": 23
				}
			],
			"type": {
				"type": "unknown",
				"name": "888"
			},
			"defaultValue": "888"
		},
		{
			"id": 707,
			"name": "MAINNET_DEFAULT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Instance of [[BlockstackNetwork]] set to the default endpoints."
			},
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 1294,
					"character": 28
				}
			],
			"type": {
				"type": "reference",
				"name": "BlockstackNetwork",
				"id": 408
			},
			"defaultValue": " new BlockstackNetwork(\n  'https://core.blockstack.org',\n  'https://broadcast.blockstack.org',\n  new BlockchainInfoApi()\n)"
		},
		{
			"id": 314,
			"name": "NO_CRYPTO_LIB",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/encryption/cryptoUtils.ts",
					"line": 32,
					"character": 26
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available."
			},
			"defaultValue": "\"Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available.\""
		},
		{
			"id": 702,
			"name": "SATOSHIS_PER_BTC",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 32,
					"character": 22
				}
			],
			"type": {
				"type": "unknown",
				"name": "100000000"
			},
			"defaultValue": "100000000"
		},
		{
			"id": 1158,
			"name": "SESSION_VERSION",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/auth/sessionData.ts",
					"line": 6,
					"character": 21
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "1.0.0"
			},
			"defaultValue": "\"1.0.0\""
		},
		{
			"id": 1780,
			"name": "SIGNATURE_FILE_SUFFIX",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 89,
					"character": 27
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": ".sig"
			},
			"defaultValue": "\".sig\""
		},
		{
			"id": 704,
			"name": "TX_BROADCAST_SERVICE_REGISTRATION_ENDPOINT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 34,
					"character": 48
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "registration"
			},
			"defaultValue": "\"registration\""
		},
		{
			"id": 705,
			"name": "TX_BROADCAST_SERVICE_TX_ENDPOINT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 35,
					"character": 38
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "transaction"
			},
			"defaultValue": "\"transaction\""
		},
		{
			"id": 703,
			"name": "TX_BROADCAST_SERVICE_ZONE_FILE_ENDPOINT",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 33,
					"character": 45
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "zone-file"
			},
			"defaultValue": "\"zone-file\""
		},
		{
			"id": 2271,
			"name": "TX_EMPTY_SIZE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 39,
					"character": 19
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": " 4 + 1 + 1 + 4"
		},
		{
			"id": 2272,
			"name": "TX_INPUT_BASE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 40,
					"character": 19
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": " 32 + 4 + 1 + 4"
		},
		{
			"id": 2273,
			"name": "TX_INPUT_PUBKEYHASH",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 41,
					"character": 25
				}
			],
			"type": {
				"type": "unknown",
				"name": "107"
			},
			"defaultValue": "107"
		},
		{
			"id": 2274,
			"name": "TX_OUTPUT_BASE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 42,
					"character": 20
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": " 8 + 1"
		},
		{
			"id": 2275,
			"name": "TX_OUTPUT_PUBKEYHASH",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 43,
					"character": 26
				}
			],
			"type": {
				"type": "unknown",
				"name": "25"
			},
			"defaultValue": "25"
		},
		{
			"id": 1972,
			"name": "VERSION",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/auth/authMessages.ts",
					"line": 14,
					"character": 13
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "1.3.1"
			},
			"defaultValue": "\"1.3.1\""
		},
		{
			"id": 2439,
			"name": "dummyConsensusHash",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 24,
					"character": 24
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
			},
			"defaultValue": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\""
		},
		{
			"id": 2440,
			"name": "dummyZonefileHash",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 25,
					"character": 23
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "ffffffffffffffffffffffffffffffffffffffff"
			},
			"defaultValue": "\"ffffffffffffffffffffffffffffffffffffffff\""
		},
		{
			"id": 1040,
			"name": "ecurve",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/encryption/ec.ts",
					"line": 11,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"name": "ec"
			},
			"defaultValue": " new EllipticCurve('secp256k1')"
		},
		{
			"id": 1776,
			"name": "etags",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 30,
					"character": 11
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1777,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"indexSignature": [
						{
							"id": 1778,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 1779,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/storage/index.ts",
							"line": 30,
							"character": 12
						}
					]
				}
			}
		},
		{
			"id": 748,
			"name": "intToLevel",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/logger.ts",
					"line": 6,
					"character": 16
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 749,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"indexSignature": [
						{
							"id": 750,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 751,
									"name": "int",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/logger.ts",
							"line": 6,
							"character": 17
						}
					]
				}
			}
		},
		{
			"id": 744,
			"name": "levelToInt",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/logger.ts",
					"line": 5,
					"character": 16
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 745,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"indexSignature": [
						{
							"id": 746,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 747,
									"name": "level",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/logger.ts",
							"line": 5,
							"character": 17
						}
					]
				}
			}
		},
		{
			"id": 743,
			"name": "levels",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/logger.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": " ['debug', 'info', 'warn', 'error', 'none']"
		},
		{
			"id": 1038,
			"name": "createCipher",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1039,
					"name": "createCipher",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AesCipher",
								"id": 986
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/aesCipher.ts",
					"line": 121,
					"character": 34
				}
			]
		},
		{
			"id": 377,
			"name": "createHashRipemd160",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 378,
					"name": "createHashRipemd160",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Ripemd160PolyfillDigest",
								"id": 365
							},
							{
								"type": "reference",
								"name": "NodeCryptoRipemd160Digest",
								"id": 369
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/hashRipemd160.ts",
					"line": 46,
					"character": 35
				}
			]
		},
		{
			"id": 984,
			"name": "createHmacSha256",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 985,
					"name": "createHmacSha256",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Hmac",
								"id": 960
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/hmacSha256.ts",
					"line": 45,
					"character": 38
				}
			]
		},
		{
			"id": 2137,
			"name": "createPbkdf2",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2138,
					"name": "createPbkdf2",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Pbkdf2",
								"id": 2091
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/pbkdf2.ts",
					"line": 151,
					"character": 34
				}
			]
		},
		{
			"id": 353,
			"name": "createSha2Hash",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 354,
					"name": "createSha2Hash",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Sha2Hash",
								"id": 329
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/sha2Hash.ts",
					"line": 58,
					"character": 36
				}
			]
		},
		{
			"id": 1792,
			"name": "decryptContent",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1793,
					"name": "decryptContent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "decrypted content.\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.decryptContent]].\n\nDecrypts data encrypted with `encryptContent` with the\ntransit private key."
							}
						]
					},
					"parameters": [
						{
							"id": 1794,
							"name": "content",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "encrypted content."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1795,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1796,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1797,
											"name": "privateKey",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the hex string of the ECDSA private\nkey to use for decryption. If not provided, will use user's appPrivateKey."
											},
											"sources": [
												{
													"fileName": "src/storage/index.ts",
													"line": 187,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1797
											]
										}
									],
									"sources": [
										{
											"fileName": "src/storage/index.ts",
											"line": 186,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 1798,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 184,
					"character": 30
				}
			]
		},
		{
			"id": 1860,
			"name": "deleteFile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1861,
					"name": "deleteFile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Deletes the specified file from the app's data store.",
						"returns": "Resolves when the file has been removed or rejects with an error.\n"
					},
					"parameters": [
						{
							"id": 1862,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The path to the file to delete."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1863,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "Optional options object."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1864,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1865,
											"name": "wasSigned",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Set to true if the file was originally signed\nin order for the corresponding signature file to also be deleted."
											},
											"sources": [
												{
													"fileName": "src/storage/index.ts",
													"line": 878,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1865
											]
										}
									],
									"sources": [
										{
											"fileName": "src/storage/index.ts",
											"line": 877,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 1866,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 875,
					"character": 32
				}
			]
		},
		{
			"id": 794,
			"name": "deleteFromGaiaHub",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 795,
					"name": "deleteFromGaiaHub",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 796,
							"name": "filename",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 797,
							"name": "hubConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "GaiaHubConfig",
								"id": 776
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/hub.ts",
					"line": 78,
					"character": 39
				}
			]
		},
		{
			"id": 1787,
			"name": "encryptContent",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1788,
					"name": "encryptContent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "Stringified ciphertext object\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.encryptContent]].\n\nEncrypts the data provided with the app public key."
							}
						]
					},
					"parameters": [
						{
							"id": 1789,
							"name": "content",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "data to encrypt"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						},
						{
							"id": 1790,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "EncryptContentOptions",
								"id": 1743
							}
						},
						{
							"id": 1791,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 131,
					"character": 36
				}
			]
		},
		{
			"id": 2527,
			"name": "estimateAnnounce",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2528,
					"name": "estimateAnnounce",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates the cost of an announce transaction",
						"returns": "- a promise which resolves to the satoshi cost\n to fund this announce transaction"
					},
					"parameters": [
						{
							"id": 2529,
							"name": "messageHash",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the hash of the message"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2530,
							"name": "senderUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of utxos we expect will\n be required from the importer address"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 429,
					"character": 25
				}
			]
		},
		{
			"id": 2521,
			"name": "estimateNameImport",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2522,
					"name": "estimateNameImport",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates the cost of a name-import transaction",
						"returns": "- a promise which resolves to the satoshi cost\n to fund this name-import transaction"
					},
					"parameters": [
						{
							"id": 2523,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the fully-qualified name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2524,
							"name": "recipientAddr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the recipient"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2525,
							"name": "zonefileHash",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the zone file hash"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2526,
							"name": "importUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will\n be required from the importer address"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 404,
					"character": 27
				}
			]
		},
		{
			"id": 2505,
			"name": "estimateNamespacePreorder",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2506,
					"name": "estimateNamespacePreorder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates cost of a namespace preorder transaction for a namespace",
						"returns": "- a promise which resolves to the satoshi cost to fund\n   the preorder. This includes a 5500 satoshi dust output for the preorder.\n   Even though this is a change output, the payer must supply enough funds\n   to generate this output, so we include it in the cost."
					},
					"parameters": [
						{
							"id": 2507,
							"name": "namespaceID",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the namespace to preorder"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2508,
							"name": "revealAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the namespace (this\n   must be passed as the 'revealAddress' in the namespace-reveal transaction)"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2509,
							"name": "paymentAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address funding the preorder"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2510,
							"name": "paymentUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will be required\n   from the payment address."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 317,
					"character": 34
				}
			]
		},
		{
			"id": 2517,
			"name": "estimateNamespaceReady",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2518,
					"name": "estimateNamespaceReady",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates the cost of a namespace-ready transaction for a namespace",
						"returns": "- a promise which resolves to the satoshi cost to\n fund this namespacey-ready transaction."
					},
					"parameters": [
						{
							"id": 2519,
							"name": "namespaceID",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the namespace to ready"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2520,
							"name": "revealUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will\n be required from the reveal address"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 379,
					"character": 31
				}
			]
		},
		{
			"id": 2511,
			"name": "estimateNamespaceReveal",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2512,
					"name": "estimateNamespaceReveal",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates cost of a namesapce reveal transaction for a namespace",
						"returns": "- a promise which resolves to the satoshi cost to\n   fund the reveal.  This includes a 5500 satoshi dust output for the\n   preorder.  Even though this is a change output, the payer must have\n   enough funds to generate this output, so we include it in the cost."
					},
					"parameters": [
						{
							"id": 2513,
							"name": "namespace",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the namespace to reveal"
							},
							"type": {
								"type": "reference",
								"name": "BlockstackNamespace"
							}
						},
						{
							"id": 2514,
							"name": "revealAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the namespace\n   (this must have been passed as 'revealAddress' to a prior namespace\n   preorder)"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2515,
							"name": "paymentAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address that pays for this transaction"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2516,
							"name": "paymentUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will be required\n   from the payment address"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 353,
					"character": 32
				}
			]
		},
		{
			"id": 2465,
			"name": "estimatePreorder",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2466,
					"name": "estimatePreorder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates cost of a preorder transaction for a domain name.",
						"returns": "- a promise which resolves to the satoshi cost to fund\n   the preorder. This includes a 5500 satoshi dust output for the preorder.\n   Even though this is a change output, the payer must supply enough funds\n   to generate this output, so we include it in the cost."
					},
					"parameters": [
						{
							"id": 2467,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to preorder"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2468,
							"name": "destinationAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the name (this\n   must be passed as the 'registrationAddress' in the register transaction)"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2469,
							"name": "paymentAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address funding the preorder"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2470,
							"name": "paymentUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will be required\n   from the payment address."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 108,
					"character": 25
				}
			]
		},
		{
			"id": 2471,
			"name": "estimateRegister",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2472,
					"name": "estimateRegister",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates cost of a register transaction for a domain name.",
						"returns": "- a promise which resolves to the satoshi cost to fund\n   the register."
					},
					"parameters": [
						{
							"id": 2473,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to register"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2474,
							"name": "registerAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2475,
							"name": "paymentAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address funding the register"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2476,
							"name": "includingZonefile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "whether or not we will broadcast\n   a zonefile hash as part  of the register"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 2477,
							"name": "paymentUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will be required\n   from the payment address."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 142,
					"character": 25
				}
			]
		},
		{
			"id": 2491,
			"name": "estimateRenewal",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2492,
					"name": "estimateRenewal",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates cost of an transfer transaction for a domain name.",
						"returns": "- a promise which resolves to the satoshi cost to fund\n   the transfer."
					},
					"parameters": [
						{
							"id": 2493,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to renew"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2494,
							"name": "destinationAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the next owner of the name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2495,
							"name": "ownerAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the current owner of the name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2496,
							"name": "paymentAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address funding the transfer"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2497,
							"name": "includingZonefile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "whether or not we will broadcast a zonefile hash\nin the renewal operation"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 2498,
							"name": "paymentUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will be required\n   from the payment address."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 244,
					"character": 24
				}
			]
		},
		{
			"id": 2499,
			"name": "estimateRevoke",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2500,
					"name": "estimateRevoke",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates cost of a revoke transaction for a domain name.",
						"returns": "- a promise which resolves to the satoshi cost to fund the\n   revoke."
					},
					"parameters": [
						{
							"id": 2501,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to revoke"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2502,
							"name": "ownerAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the current owner of the name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2503,
							"name": "paymentAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address funding the revoke"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2504,
							"name": "paymentUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will be required\n   from the payment address."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 285,
					"character": 23
				}
			]
		},
		{
			"id": 2531,
			"name": "estimateTokenTransfer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2532,
					"name": "estimateTokenTransfer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates the cost of a token-transfer transaction",
						"returns": "- a promise which resolves to the satoshi cost to\n fund this token-transfer transaction"
					},
					"parameters": [
						{
							"id": 2533,
							"name": "recipientAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the recipient of the tokens"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2534,
							"name": "tokenType",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the type of token to spend"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2535,
							"name": "tokenAmount",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a 64-bit unsigned BigInteger encoding the number of tokens\n  to spend"
							},
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2536,
							"name": "scratchArea",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "an arbitrary string to store with the transaction"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2537,
							"name": "senderUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of utxos we expect will\n be required from the importer address"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						},
						{
							"id": 2538,
							"name": "additionalOutputs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of outputs we expect to add beyond\n just the recipient output (default = 1, if the token owner is also the bitcoin funder)"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 458,
					"character": 30
				}
			]
		},
		{
			"id": 2484,
			"name": "estimateTransfer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2485,
					"name": "estimateTransfer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates cost of an transfer transaction for a domain name.",
						"returns": "- a promise which resolves to the satoshi cost to fund\n   the transfer."
					},
					"parameters": [
						{
							"id": 2486,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to transfer"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2487,
							"name": "destinationAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the next owner of the name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2488,
							"name": "ownerAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the current owner of the name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2489,
							"name": "paymentAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address funding the transfer"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2490,
							"name": "paymentUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will be required\n   from the payment address."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 210,
					"character": 31
				}
			]
		},
		{
			"id": 2478,
			"name": "estimateUpdate",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2479,
					"name": "estimateUpdate",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Estimates cost of an update transaction for a domain name.",
						"returns": "- a promise which resolves to the satoshi cost to fund\n   the update."
					},
					"parameters": [
						{
							"id": 2480,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to update"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2481,
							"name": "ownerAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the owner of the name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2482,
							"name": "paymentAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address funding the update"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2483,
							"name": "paymentUtxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the number of UTXOs we expect will be required\n   from the payment address."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 179,
					"character": 29
				}
			]
		},
		{
			"id": 1213,
			"name": "extractProfile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1214,
					"name": "extractProfile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Extracts a profile from an encoded token and optionally verifies it,\nif `publicKeyOrAddress` is provided.",
						"returns": "- the profile extracted from the encoded token",
						"tags": [
							{
								"tag": "throws",
								"text": "{Error} - if the token isn't signed by the provided `publicKeyOrAddress`\n"
							}
						]
					},
					"parameters": [
						{
							"id": 1215,
							"name": "token",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the token to be extracted"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1216,
							"name": "publicKeyOrAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the public key or address of the\n  keypair that is thought to have signed the token"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"defaultValue": " null"
						}
					],
					"type": {
						"type": "reference",
						"name": "Record",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profileTokens.ts",
					"line": 146,
					"character": 30
				}
			]
		},
		{
			"id": 857,
			"name": "getAPIUsageErrorMessage",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 858,
					"name": "getAPIUsageErrorMessage",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 859,
							"name": "scopeObject",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 860,
							"name": "apiName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 861,
							"name": "usageDesc",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utils.ts",
					"line": 235,
					"character": 32
				}
			]
		},
		{
			"id": 1867,
			"name": "getAppBucketUrl",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1868,
					"name": "getAppBucketUrl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get the app storage bucket URL",
						"returns": "That resolves to the URL of the app index file\nor rejects if it fails\n"
					},
					"parameters": [
						{
							"id": 1869,
							"name": "gaiaHubUrl",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the gaia hub URL"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1870,
							"name": "appPrivateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the app private key used to generate the app address"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 914,
					"character": 31
				}
			]
		},
		{
			"id": 2051,
			"name": "getAuthResponseToken",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2052,
					"name": "getAuthResponseToken",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "the authentication token if it exists otherwise `null`\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.getAuthResponseToken]] instead.\n\nRetrieve the authentication token from the URL query"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 155,
					"character": 36
				}
			]
		},
		{
			"id": 837,
			"name": "getBase64OutputLength",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 838,
					"name": "getBase64OutputLength",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Calculate the base64 encoded string length for a given input length.\nThis is equivalent to the byte length when the string is ASCII or UTF8-8\nencoded."
					},
					"parameters": [
						{
							"id": 839,
							"name": "inputByteLength",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utils.ts",
					"line": 86,
					"character": 37
				}
			]
		},
		{
			"id": 883,
			"name": "getBlockstackErrorFromResponse",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 884,
					"name": "getBlockstackErrorFromResponse",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Returns a BlockstackError correlating to the given HTTP response,\nwith the provided errorMsg. Throws if the HTTP response is 'ok'."
					},
					"parameters": [
						{
							"id": 885,
							"name": "response",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Response"
							}
						},
						{
							"id": 886,
							"name": "errorMsg",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 887,
							"name": "hubConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GaiaHubConfig",
										"id": 776
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Error"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utils.ts",
					"line": 376,
					"character": 52
				}
			]
		},
		{
			"id": 327,
			"name": "getCryptoLib",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 328,
					"name": "getCryptoLib",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "WebCryptoLib",
										"id": 299
									},
									{
										"type": "reference",
										"name": "NodeCryptoLib",
										"id": 302
									}
								]
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/cryptoUtils.ts",
					"line": 50,
					"character": 34
				}
			]
		},
		{
			"id": 1845,
			"name": "getFile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1846,
					"name": "getFile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Retrieves the specified file from the app's data store.",
						"returns": "that resolves to the raw data in the file\nor rejects with an error\n"
					},
					"parameters": [
						{
							"id": 1847,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the path to the file to read"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1848,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "GetFileOptions",
								"id": 1758
							}
						},
						{
							"id": 1849,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ArrayBuffer"
									}
								]
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 515,
					"character": 29
				}
			]
		},
		{
			"id": 1823,
			"name": "getFileContents",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 1824,
					"name": "getFileContents",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1825,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1826,
							"name": "app",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1827,
							"name": "username",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1828,
							"name": "zoneFileLookupURL",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 1829,
							"name": "forceText",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1830,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ArrayBuffer"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 313,
					"character": 30
				}
			]
		},
		{
			"id": 1831,
			"name": "getFileSignedUnencrypted",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 1832,
					"name": "getFileSignedUnencrypted",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1833,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1834,
							"name": "opt",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "GetFileOptions",
								"id": 1758
							}
						},
						{
							"id": 1835,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ArrayBuffer"
									}
								]
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 347,
					"character": 39
				}
			]
		},
		{
			"id": 1818,
			"name": "getFileUrl",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1819,
					"name": "getFileUrl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "that resolves to the URL or rejects with an error\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.getFileUrl]] instead.\n"
							}
						]
					},
					"parameters": [
						{
							"id": 1820,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the path to the file to read"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1821,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "GetFileUrlOptions",
								"id": 1754
							}
						},
						{
							"id": 1822,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 286,
					"character": 32
				}
			]
		},
		{
			"id": 1799,
			"name": "getGaiaAddress",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 1800,
					"name": "getGaiaAddress",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1801,
							"name": "app",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1802,
							"name": "username",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1803,
							"name": "zoneFileLookupURL",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1804,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 214,
					"character": 29
				}
			]
		},
		{
			"id": 880,
			"name": "getGaiaErrorResponse",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 881,
					"name": "getGaiaErrorResponse",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 882,
							"name": "response",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Response"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "GaiaHubErrorResponse"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utils.ts",
					"line": 353,
					"character": 35
				}
			]
		},
		{
			"id": 1506,
			"name": "getName",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1507,
					"name": "getName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1508,
							"name": "profile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profileSchemas/personUtils.ts",
					"line": 1,
					"character": 23
				}
			]
		},
		{
			"id": 708,
			"name": "getNameInfo",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 709,
					"name": "getNameInfo",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).\nThis is intended for use in third-party wallets or in DApps that register names.",
						"returns": "a promise that resolves to the WHOIS-like information\n"
					},
					"parameters": [
						{
							"id": 710,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to query.  Can be on-chain of off-chain."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/network.ts",
					"line": 1307,
					"character": 27
				}
			]
		},
		{
			"id": 2012,
			"name": "getQueryStringParams",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 2013,
					"name": "getQueryStringParams",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 2014,
							"name": "query",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Record",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/protocolEchoDetection.ts",
					"line": 13,
					"character": 29
				}
			]
		},
		{
			"id": 2294,
			"name": "getTransaction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 2295,
					"name": "getTransaction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 2296,
							"name": "txIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Transaction"
									},
									{
										"type": "reference",
										"name": "TransactionBuilder"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Transaction"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 79,
					"character": 23
				}
			]
		},
		{
			"id": 1781,
			"name": "getUserAppFileUrl",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1782,
					"name": "getUserAppFileUrl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Fetch the public read URL of a user file for the specified app.",
						"returns": "that resolves to the public read URL of the file\nor rejects with an error\n"
					},
					"parameters": [
						{
							"id": 1783,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the path to the file to read"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1784,
							"name": "username",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The Blockstack ID of the user to look up"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1785,
							"name": "appOrigin",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The app origin"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1786,
							"name": "zoneFileLookupURL",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 102,
					"character": 39
				}
			]
		},
		{
			"id": 2063,
			"name": "handlePendingSignIn",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2064,
					"name": "handlePendingSignIn",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "that resolves to the user data object if successful and rejects\nif handling the sign in request fails or there was no pending sign in request.\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.handlePendingSignIn]] instead.\n\nTry to process any pending sign in request by returning a `Promise` that resolves\nto the user data object if the sign in succeeds.\n"
							}
						]
					},
					"parameters": [
						{
							"id": 2065,
							"name": "nameLookupURL",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the endpoint against which to verify public\nkeys match claimed username"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 2066,
							"name": "authResponseToken",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the signed authentication response token"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " getAuthResponseToken()"
						},
						{
							"id": 2067,
							"name": "transitKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "the transit private key that corresponds to the transit public key\nthat was provided in the authentication request"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2068,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "UserData",
								"id": 2026
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 261,
					"character": 41
				}
			]
		},
		{
			"id": 1836,
			"name": "handleSignedEncryptedContents",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 1837,
					"name": "handleSignedEncryptedContents",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1838,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						},
						{
							"id": 1839,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1840,
							"name": "storedContents",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1841,
							"name": "app",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1842,
							"name": "privateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1843,
							"name": "username",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1844,
							"name": "zoneFileLookupURL",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 417,
					"character": 44
				}
			]
		},
		{
			"id": 379,
			"name": "hashRipemd160",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 380,
					"name": "hashRipemd160",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 381,
							"name": "data",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/hashRipemd160.ts",
					"line": 60,
					"character": 29
				}
			]
		},
		{
			"id": 355,
			"name": "hashSha256Sync",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 356,
					"name": "hashSha256Sync",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 357,
							"name": "data",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/sha2Hash.ts",
					"line": 67,
					"character": 30
				}
			]
		},
		{
			"id": 358,
			"name": "hashSha512Sync",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 359,
					"name": "hashSha512Sync",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 360,
							"name": "data",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/sha2Hash.ts",
					"line": 73,
					"character": 30
				}
			]
		},
		{
			"id": 2281,
			"name": "inputBytes",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 2282,
					"name": "inputBytes",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 2283,
							"name": "input",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "txPoint",
										"id": 2276
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 49,
					"character": 19
				}
			]
		},
		{
			"id": 307,
			"name": "isNodeCryptoAvailable",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 308,
					"name": "isNodeCryptoAvailable",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 309,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 310,
							"name": "withFeature",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 311,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 312,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 313,
													"name": "nodeCrypto",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "\"crypto\""
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "src/encryption/cryptoUtils.ts",
											"line": 7,
											"character": 14
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "typeParameter",
								"name": "T"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/cryptoUtils.ts",
					"line": 6,
					"character": 37
				},
				{
					"fileName": "src/encryption/cryptoUtils.ts",
					"line": 9,
					"character": 37
				}
			]
		},
		{
			"id": 1851,
			"name": "isRecoverableGaiaError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 1852,
					"name": "isRecoverableGaiaError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Determines if a gaia error response is possible to recover from\nby refreshing the gaiaHubConfig, and retrying the request."
					},
					"parameters": [
						{
							"id": 1853,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "GaiaHubError"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 703,
					"character": 31
				}
			]
		},
		{
			"id": 2049,
			"name": "isSignInPending",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2050,
					"name": "isSignInPending",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "`true` if there is a pending sign in, otherwise `false`\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.isSignInPending]] instead.\n\nCheck if there is a authentication request that hasn't been handled.\n\nAlso checks for a protocol echo reply (which if detected then the page\nwill be automatically redirected after this call).\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 134,
					"character": 31
				}
			]
		},
		{
			"id": 305,
			"name": "isSubtleCryptoAvailable",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 306,
					"name": "isSubtleCryptoAvailable",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/encryption/cryptoUtils.ts",
					"line": 2,
					"character": 39
				}
			]
		},
		{
			"id": 2042,
			"name": "isUserSignedIn",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2043,
					"name": "isUserSignedIn",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "`true` if the user is signed in, `false` if not.\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.isUserSignedIn]] instead.\n\nCheck if a user is currently signed in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 78,
					"character": 30
				}
			]
		},
		{
			"id": 2017,
			"name": "launchCustomProtocol",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2018,
					"name": "launchCustomProtocol",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Detects if the native auth-browser is installed and is successfully\nlaunched via a custom protocol URI.",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 2019,
							"name": "authRequest",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "\nThe encoded authRequest to be used as a query param in the custom URI."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2020,
							"name": "successCallback",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "\nThe callback that is invoked when the protocol handler was detected."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2021,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2022,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/auth/protocolLaunch.ts",
											"line": 17,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 2023,
							"name": "failCallback",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "\nThe callback that is invoked when the protocol handler was not detected."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2024,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2025,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/auth/protocolLaunch.ts",
											"line": 18,
											"character": 15
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/protocolLaunch.ts",
					"line": 15,
					"character": 36
				}
			]
		},
		{
			"id": 1882,
			"name": "listFiles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1883,
					"name": "listFiles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "List the set of files in this application's Gaia storage bucket.",
						"returns": "that resolves to the total number of listed files.\nIf the call is ended early by the callback, the last file is excluded.\nIf an error occurs the entire call is rejected.\n"
					},
					"parameters": [
						{
							"id": 1884,
							"name": "callback",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a callback to invoke on each named file that\nreturns `true` to continue the listing operation or `false` to end it"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1885,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1886,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1887,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/storage/index.ts",
											"line": 1014,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 1888,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 1013,
					"character": 25
				}
			]
		},
		{
			"id": 2053,
			"name": "loadUserData",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2054,
					"name": "loadUserData",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "User data object.\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.loadUserData]] instead.\n\nRetrieves the user data object. The user's profile is stored in the key `profile`."
							}
						]
					},
					"type": {
						"type": "reference",
						"name": "UserData",
						"id": 2026
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 171,
					"character": 28
				}
			]
		},
		{
			"id": 1735,
			"name": "lookupProfile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1736,
					"name": "lookupProfile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Look up a user profile by blockstack ID",
						"returns": "that resolves to a profile object\n"
					},
					"parameters": [
						{
							"id": 1737,
							"name": "username",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The Blockstack ID of the profile to look up"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1738,
							"name": "zoneFileLookupURL",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profileLookup.ts",
					"line": 15,
					"character": 29
				}
			]
		},
		{
			"id": 2608,
			"name": "makeAnnounce",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2609,
					"name": "makeAnnounce",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates an announce transaction",
						"returns": "- a promise which resolves to the hex-encoded transaction.\nthis function does not perform the requisite safety checks -- please see the\nsafety module for those."
					},
					"parameters": [
						{
							"id": 2610,
							"name": "messageHash",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the hash of the message to send.  Should be\n an already-announced zone file hash"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2611,
							"name": "senderKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the private key\n that pays for the transaction.  Should be the key that owns the\n name that the message recipients subscribe to"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2612,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\nindicating whether the function should attempt to return an unsigned (or not fully signed)\ntransaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 1023,
					"character": 27
				}
			]
		},
		{
			"id": 1979,
			"name": "makeAuthRequest",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1980,
					"name": "makeAuthRequest",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Generates an authentication request that can be sent to the Blockstack\nbrowser for the user to approve sign in. This authentication request can\nthen be used for sign in by passing it to the `redirectToSignInWithAuthRequest`\nmethod.",
						"text": "*Note: This method should only be used if you want to roll your own authentication\nflow. Typically you'd use `redirectToSignIn` which takes care of this\nunder the hood.*\n",
						"returns": "the authentication request\n"
					},
					"parameters": [
						{
							"id": 1981,
							"name": "transitPrivateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "hex encoded transit private key"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1982,
							"name": "redirectURI",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "location to redirect user to after sign in approval"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1983,
							"name": "manifestURI",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "location of this app's manifest file"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1984,
							"name": "scopes",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the permissions this app is requesting"
							},
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "AuthScope",
												"id": 1
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								]
							},
							"defaultValue": " DEFAULT_SCOPE.slice()"
						},
						{
							"id": 1985,
							"name": "appDomain",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "the origin of this app"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1986,
							"name": "expiresAt",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the time at which this request is no longer valid"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": " nextMonth().getTime()"
						},
						{
							"id": 1987,
							"name": "extraParams",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "Any extra parameters you'd like to pass to the authenticator.\nUse this to pass options that aren't part of the Blockstack auth spec, but might be supported\nby special authenticators."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " {}"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authMessages.ts",
					"line": 56,
					"character": 31
				}
			]
		},
		{
			"id": 2622,
			"name": "makeBitcoinSpend",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2623,
					"name": "makeBitcoinSpend",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a bitcoin spend to a specified address. This will fund up to `amount`\n  of satoshis from the payer's UTXOs. It will generate a change output if and only\n  if the amount of leftover change is *greater* than the additional fees associated\n  with the extra output. If the requested amount is not enough to fund the transaction's\n  associated fees, then this will reject with a InvalidAmountError",
						"text": "UTXOs are selected largest to smallest, and UTXOs which cannot fund the fees associated\n  with their own input will not be included.\n\nIf you specify an amount > the total balance of the payer address, then this will\n  generate a maximum spend transaction\n",
						"returns": "- a promise which resolves to the hex-encoded transaction."
					},
					"parameters": [
						{
							"id": 2624,
							"name": "destinationAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the bitcoin payment"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2625,
							"name": "paymentKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the private key\n   used to fund the bitcoin spend"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2626,
							"name": "amount",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the amount in satoshis for the payment address to\n   spend in this transaction"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2627,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\nindicating whether the function should attempt to return an unsigned (or not fully signed)\ntransaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 1129,
					"character": 31
				}
			]
		},
		{
			"id": 2601,
			"name": "makeNameImport",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2602,
					"name": "makeNameImport",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a name import transaction for a namespace",
						"returns": "- a promise which resolves to the hex-encoded transaction.\nthis function does not perform the requisite safety checks -- please see\nthe safety module for those."
					},
					"parameters": [
						{
							"id": 2603,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to import"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2604,
							"name": "recipientAddr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2605,
							"name": "zonefileHash",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the hash of the zonefile to give this name"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2606,
							"name": "importerKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the private key\nthat pays for the import"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2607,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\nindicating whether the function should attempt to return an unsigned (or not fully signed)\ntransaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 986,
					"character": 29
				}
			]
		},
		{
			"id": 2596,
			"name": "makeNamespaceReady",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2597,
					"name": "makeNamespaceReady",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a namespace ready transaction for a namespace",
						"returns": "- a promise which resolves to the hex-encoded transaction.\n this function *does not* perform the requisite safety checks -- please see\n the safety module for those."
					},
					"parameters": [
						{
							"id": 2598,
							"name": "namespaceID",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the namespace to launch"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2599,
							"name": "revealKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the private key\n of the 'revealAddress' used to reveal the namespace"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2600,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\n indicating whether the function should attempt to return an unsigned (or not fully signed)\n transaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 950,
					"character": 33
				}
			]
		},
		{
			"id": 2590,
			"name": "makeNamespaceReveal",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2591,
					"name": "makeNamespaceReveal",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a namespace reveal transaction for a namespace",
						"returns": "- a promise which resolves to the hex-encoded transaction.\n  this function *does not* perform the requisite safety checks -- please see\n  the safety module for those."
					},
					"parameters": [
						{
							"id": 2592,
							"name": "namespace",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the namespace to reveal"
							},
							"type": {
								"type": "reference",
								"name": "BlockstackNamespace"
							}
						},
						{
							"id": 2593,
							"name": "revealAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the namespace (this\n  must be passed as the 'revealAddress' in the namespace-reveal transaction)"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2594,
							"name": "paymentKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string (or\n  a TransactionSigner object) of the private key used to fund the\n  transaction"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2595,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\n  indicating whether the function should attempt to return an unsigned (or not fully signed)\n  transaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 908,
					"character": 34
				}
			]
		},
		{
			"id": 2539,
			"name": "makePreorder",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2540,
					"name": "makePreorder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a preorder transaction for a domain name.",
						"returns": "- a promise which resolves to the hex-encoded transaction.\n   this function *does not* perform the requisite safety checks -- please see\n   the safety module for those."
					},
					"parameters": [
						{
							"id": 2541,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to pre-order"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2542,
							"name": "destinationAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the name (this\n   must be passed as the 'registrationAddress' in the register transaction)"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2543,
							"name": "paymentKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string of\n   the private key used to fund the transaction or a transaction signer object"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2544,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\nindicating whether the function should attempt to return an unsigned (or not fully signed)\ntransaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 492,
					"character": 27
				}
			]
		},
		{
			"id": 2553,
			"name": "makeRegister",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2554,
					"name": "makeRegister",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a register transaction for a domain name.",
						"returns": "- a promise which resolves to the hex-encoded transaction.\n   this function *does not* perform the requisite safety checks -- please see\n   the safety module for those."
					},
					"parameters": [
						{
							"id": 2555,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to register"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2556,
							"name": "registerAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the name (this\n   must have been passed as the 'destinationAddress' in the preorder transaction)\n   this address will receive a dust UTXO"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2557,
							"name": "paymentKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string of\n   the private key (or a TransactionSigner object) used to fund the\n   transaction (this *must* be the same as the payment address used\n   to fund the preorder)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2558,
							"name": "zonefile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the zonefile data to include (this will be hashed\n   to include in the transaction), the zonefile itself must be published\n   after the UPDATE propagates."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " null"
						},
						{
							"id": 2559,
							"name": "valueHash",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the hash of the zone file data to include.\n   It will be used instead of zonefile, if given"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " null"
						},
						{
							"id": 2560,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\n   indicating whether the function should attempt to return an unsigned (or not fully signed)\n   transaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 624,
					"character": 27
				}
			]
		},
		{
			"id": 2575,
			"name": "makeRenewal",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2576,
					"name": "makeRenewal",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a renewal transaction for a domain name.",
						"returns": "- a promise which resolves to the hex-encoded transaction.\n   this function *does not* perform the requisite safety checks -- please see\n   the safety module for those."
					},
					"parameters": [
						{
							"id": 2577,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to transfer"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2578,
							"name": "destinationAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the name after renewal\n   this address will receive a dust UTXO"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2579,
							"name": "ownerKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string of\n   the current owner's private key (or a TransactionSigner object)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2580,
							"name": "paymentKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string of\n   the private key used to fund the renewal (or a TransactionSigner\n   object)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2581,
							"name": "zonefile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the zonefile data to include, if given (this will be hashed\n   to include in the transaction), the zonefile itself must be published\n   after the RENEWAL propagates."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " null"
						},
						{
							"id": 2582,
							"name": "valueHash",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the raw zone file hash to include (this will be used\n   instead of zonefile, if given)."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " null"
						},
						{
							"id": 2583,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\n   indicating whether the function should attempt to return an unsigned (or not fully signed)\n   transaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 786,
					"character": 26
				}
			]
		},
		{
			"id": 2569,
			"name": "makeRevoke",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2570,
					"name": "makeRevoke",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a revoke transaction for a domain name.",
						"returns": "- a promise which resolves to the hex-encoded transaction.\n   this function *does not* perform the requisite safety checks -- please see\n   the safety module for those."
					},
					"parameters": [
						{
							"id": 2571,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to revoke"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2572,
							"name": "ownerKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string of\n   the current owner's private key (or a TransactionSigner object)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2573,
							"name": "paymentKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string of\n   the private key used to fund the transaction (or a\n   TransactionSigner object)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2574,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\n   indicating whether the function should attempt to return an unsigned (or not fully signed)\n   transaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 734,
					"character": 19
				}
			]
		},
		{
			"id": 2613,
			"name": "makeTokenTransfer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2614,
					"name": "makeTokenTransfer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a token-transfer transaction",
						"returns": "- a promise which resolves to the hex-encoded transaction.\nThis function does not perform the requisite safety checks -- please see the\nsafety module for those."
					},
					"parameters": [
						{
							"id": 2615,
							"name": "recipientAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the tokens"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2616,
							"name": "tokenType",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the type of tokens to send"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2617,
							"name": "tokenAmount",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the BigInteger encoding of an unsigned 64-bit number of\n tokens to send"
							},
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2618,
							"name": "scratchArea",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "an arbitrary string to include with the transaction"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2619,
							"name": "senderKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the hex-encoded private key to send\n  the tokens"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2620,
							"name": "btcFunderKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "the hex-encoded private key to fund\n  the bitcoin fees for the transaction. Optional -- if not passed, will attempt to\n  fund with sender key."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2621,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\n  indicating whether the function should attempt to return an unsigned (or not fully signed)\n  transaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 1063,
					"character": 26
				}
			]
		},
		{
			"id": 2561,
			"name": "makeTransfer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2562,
					"name": "makeTransfer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates a transfer transaction for a domain name.",
						"returns": "- a promise which resolves to the hex-encoded transaction.\n   this function *does not* perform the requisite safety checks -- please see\n   the safety module for those."
					},
					"parameters": [
						{
							"id": 2563,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to transfer"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2564,
							"name": "destinationAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the address to receive the name.\n   this address will receive a dust UTXO"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2565,
							"name": "ownerKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string of\n   the current owner's private key (or a TransactionSigner object)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2566,
							"name": "paymentKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string of\n   the private key used to fund the transaction (or a\n   TransactionSigner object)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2567,
							"name": "keepZonefile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "if true, then preserve the name's zone file"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 2568,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\n  indicating whether the function should attempt to return an unsigned (or not fully signed)\n  transaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 680,
					"character": 21
				}
			]
		},
		{
			"id": 2545,
			"name": "makeUpdate",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPrivate": true
			},
			"signatures": [
				{
					"id": 2546,
					"name": "makeUpdate",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Generates an update transaction for a domain name.",
						"returns": "- a promise which resolves to the hex-encoded transaction.\n   this function *does not* perform the requisite safety checks -- please see\n   the safety module for those."
					},
					"parameters": [
						{
							"id": 2547,
							"name": "fullyQualifiedName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the name to update"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2548,
							"name": "ownerKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string of the\n   owner key, or a transaction signer object. This will provide one\n   UTXO input, and also recieve a dust output."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2549,
							"name": "paymentKeyIn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "a hex string, or a\n   transaction signer object, of the private key used to fund the\n   transaction's txfees"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TransactionSigner"
									}
								]
							}
						},
						{
							"id": 2550,
							"name": "zonefile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the zonefile data to update (this will be hashed\n   to include in the transaction), the zonefile itself must be published\n   after the UPDATE propagates."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2551,
							"name": "valueHash",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "if given, this is the hash to store (instead of\n   zonefile).  zonefile will be ignored if this is given."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 2552,
							"name": "buildIncomplete",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "optional boolean, defaults to false,\n   indicating whether the function should attempt to return an unsigned (or not fully signed)\n   transaction. Useful for passing around a TX for multi-sig input signing."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 549,
					"character": 25
				}
			]
		},
		{
			"id": 2284,
			"name": "outputBytes",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 2285,
					"name": "outputBytes",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 2286,
							"name": "output",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "txPoint",
										"id": 2276
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 57,
					"character": 20
				}
			]
		},
		{
			"id": 1854,
			"name": "putFile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1855,
					"name": "putFile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Stores the data provided in the app's data store to to the file specified.",
						"returns": "that resolves if the operation succeed and rejects\nif it failed\n"
					},
					"parameters": [
						{
							"id": 1856,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the path to store the data in"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1857,
							"name": "content",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the data to store in the file"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									},
									{
										"type": "reference",
										"name": "ArrayBufferView"
									},
									{
										"type": "reference",
										"name": "Blob"
									}
								]
							}
						},
						{
							"id": 1858,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "PutFileOptions",
								"id": 1748
							}
						},
						{
							"id": 1859,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/storage/index.ts",
					"line": 730,
					"character": 29
				}
			]
		},
		{
			"id": 2044,
			"name": "redirectToSignIn",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2045,
					"name": "redirectToSignIn",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.isUserSignedIn]] instead.\n\nGenerates an authentication request and redirects the user to the Blockstack\nbrowser to approve the sign in request.\n\nPlease note that this requires that the web browser properly handles the\n`blockstack:` URL protocol handler.\n\nMost applications should use this\nmethod for sign in unless they require more fine grained control over how the\nauthentication request is generated. If your app falls into this category,\nuse `makeAuthRequest` and `redirectToSignInWithAuthRequest` to build your own sign in process.\n"
							}
						]
					},
					"parameters": [
						{
							"id": 2046,
							"name": "redirectURI",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2047,
							"name": "manifestURI",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2048,
							"name": "scopes",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "AuthScope",
												"id": 1
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 113,
					"character": 32
				}
			]
		},
		{
			"id": 2059,
			"name": "redirectToSignInWithAuthRequest",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2060,
					"name": "redirectToSignInWithAuthRequest",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "\n",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.redirectToSignInWithAuthRequest]] instead.\n\nRedirects the user to the Blockstack browser to approve the sign in request\ngiven.\n\nThe user is redirected to the `blockstackIDHost` if the `blockstack:`\nprotocol handler is not detected. Please note that the protocol handler detection\ndoes not work on all browsers."
							}
						]
					},
					"parameters": [
						{
							"id": 2061,
							"name": "authRequest",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "the authentication request generated by `makeAuthRequest`"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2062,
							"name": "blockstackIDHost",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the URL to redirect the user to if the blockstack\n                                    protocol handler is not detected"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " DEFAULT_BLOCKSTACK_HOST"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 214,
					"character": 47
				}
			]
		},
		{
			"id": 2315,
			"name": "signInputs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2316,
					"name": "signInputs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 2317,
							"name": "txB",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "TransactionBuilder"
							}
						},
						{
							"id": 2318,
							"name": "defaultSigner",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "TransactionSigner"
							}
						},
						{
							"id": 2319,
							"name": "otherSigners",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2320,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2321,
													"name": "index",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/operations/utils.ts",
															"line": 214,
															"character": 54
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2322,
													"name": "signer",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/operations/utils.ts",
															"line": 214,
															"character": 70
														}
													],
													"type": {
														"type": "reference",
														"name": "TransactionSigner"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2321,
														2322
													]
												}
											],
											"sources": [
												{
													"fileName": "src/operations/utils.ts",
													"line": 214,
													"character": 48
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "TransactionBuilder"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 212,
					"character": 26
				}
			]
		},
		{
			"id": 1194,
			"name": "signProfileToken",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1195,
					"name": "signProfileToken",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Signs a profile token",
						"returns": "- the signed profile token\n\n"
					},
					"parameters": [
						{
							"id": 1196,
							"name": "profile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the JSON of the profile to be signed"
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1197,
							"name": "privateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the signing private key"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1198,
							"name": "subject",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "the entity that the information is about"
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1199,
							"name": "issuer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "the entity that is issuing the token"
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1200,
							"name": "signingAlgorithm",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the signing algorithm to use"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"ES256K\""
						},
						{
							"id": 1201,
							"name": "issuedAt",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the time of issuance of the token"
							},
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"defaultValue": " new Date()"
						},
						{
							"id": 1202,
							"name": "expiresAt",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the time of expiration of the token"
							},
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"defaultValue": " nextYear()"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profileTokens.ts",
					"line": 19,
					"character": 32
				}
			]
		},
		{
			"id": 2055,
			"name": "signUserOut",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 2056,
					"name": "signUserOut",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n#### v19 Use [[UserSession.signUserOut]] instead.\n\nSign the user out and optionally redirect to given location."
							}
						]
					},
					"parameters": [
						{
							"id": 2057,
							"name": "redirectURL",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "\nLocation to redirect user to after sign out.\nOnly used in environments with `window` available\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2058,
							"name": "caller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "UserSession",
								"id": 1889
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 188,
					"character": 27
				}
			]
		},
		{
			"id": 2287,
			"name": "transactionBytes",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 2288,
					"name": "transactionBytes",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 2289,
							"name": "inputs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "txPoint",
												"id": 2276
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						},
						{
							"id": 2290,
							"name": "outputs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "txPoint",
												"id": 2276
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/operations/utils.ts",
					"line": 65,
					"character": 25
				}
			]
		},
		{
			"id": 1432,
			"name": "validateProofs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1433,
					"name": "validateProofs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Validates the social proofs in a user's profile. Currently supports validation of\nFacebook, Twitter, GitHub, Instagram, LinkedIn and HackerNews accounts.",
						"returns": "that resolves to an array of validated proof objects\n"
					},
					"parameters": [
						{
							"id": 1434,
							"name": "profile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The JSON of the profile to be validated"
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1435,
							"name": "ownerAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The owner bitcoin address to be validated"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1436,
							"name": "cheerio",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CheerioModuleType",
								"id": 1251
							}
						},
						{
							"id": 1437,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " null"
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "AccountProofInfo",
									"id": 1427
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profileProofs.ts",
					"line": 20,
					"character": 30
				}
			]
		},
		{
			"id": 1209,
			"name": "verifyProfileToken",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1210,
					"name": "verifyProfileToken",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Verifies a profile token",
						"returns": "- the verified, decoded profile token",
						"tags": [
							{
								"tag": "throws",
								"text": "{Error} - throws an error if token verification fails\n"
							}
						]
					},
					"parameters": [
						{
							"id": 1211,
							"name": "token",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the token to be verified"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1212,
							"name": "publicKeyOrAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the public key or address of the\n  keypair that is thought to have signed the token"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "TokenInterface"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profileTokens.ts",
					"line": 74,
					"character": 34
				}
			]
		},
		{
			"id": 1203,
			"name": "wrapProfileToken",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 1204,
					"name": "wrapProfileToken",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Wraps a token for a profile token file",
						"returns": "- including `token` and `decodedToken`\n"
					},
					"parameters": [
						{
							"id": 1205,
							"name": "token",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "the token to be wrapped"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1206,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1208,
									"name": "decodedToken",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileTokens.ts",
											"line": 62,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "TokenInterface"
									},
									"defaultValue": " decodeToken(token)"
								},
								{
									"id": 1207,
									"name": "token",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileTokens.ts",
											"line": 61,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1208,
										1207
									]
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profileTokens.ts",
					"line": 59,
					"character": 32
				}
			]
		},
		{
			"id": 2039,
			"name": "DEFAULT_PROFILE",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isConst": true
			},
			"children": [
				{
					"id": 2041,
					"name": "@context",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"http://schema.org\""
				},
				{
					"id": 2040,
					"name": "@type",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/auth/authApp.ts",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"Person\""
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2041,
						2040
					]
				}
			],
			"sources": [
				{
					"fileName": "src/auth/authApp.ts",
					"line": 26,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 1471,
			"name": "schemaDefinition",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isConst": true
			},
			"children": [
				{
					"id": 1611,
					"name": "strict",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/profiles/profileSchemas/person.ts",
							"line": 15,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1472,
					"name": "type",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 10,
							"character": 6
						},
						{
							"fileName": "src/profiles/profileSchemas/person.ts",
							"line": 14,
							"character": 6
						},
						{
							"fileName": "src/profiles/profileSchemas/organization.ts",
							"line": 9,
							"character": 6
						},
						{
							"fileName": "src/profiles/profileSchemas/creativework.ts",
							"line": 7,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"object\""
				},
				{
					"id": 1473,
					"name": "properties",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {},
					"children": [
						{
							"id": 1474,
							"name": "@context",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1476,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profile.ts",
											"line": 12,
											"character": 42
										},
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 17,
											"character": 42
										},
										{
											"fileName": "src/profiles/profileSchemas/organization.ts",
											"line": 11,
											"character": 42
										},
										{
											"fileName": "src/profiles/profileSchemas/creativework.ts",
											"line": 9,
											"character": 42
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1475,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profile.ts",
											"line": 12,
											"character": 22
										},
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 17,
											"character": 22
										},
										{
											"fileName": "src/profiles/profileSchemas/organization.ts",
											"line": 11,
											"character": 22
										},
										{
											"fileName": "src/profiles/profileSchemas/creativework.ts",
											"line": 9,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"string\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1476,
										1475
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profile.ts",
									"line": 12,
									"character": 14
								},
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 17,
									"character": 14
								},
								{
									"fileName": "src/profiles/profileSchemas/organization.ts",
									"line": 11,
									"character": 14
								},
								{
									"fileName": "src/profiles/profileSchemas/creativework.ts",
									"line": 9,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1612,
							"name": "@id",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1614,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 19,
											"character": 37
										},
										{
											"fileName": "src/profiles/profileSchemas/organization.ts",
											"line": 13,
											"character": 37
										},
										{
											"fileName": "src/profiles/profileSchemas/creativework.ts",
											"line": 11,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1613,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 19,
											"character": 17
										},
										{
											"fileName": "src/profiles/profileSchemas/organization.ts",
											"line": 13,
											"character": 17
										},
										{
											"fileName": "src/profiles/profileSchemas/creativework.ts",
											"line": 11,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"string\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1614,
										1613
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 19,
									"character": 9
								},
								{
									"fileName": "src/profiles/profileSchemas/organization.ts",
									"line": 13,
									"character": 9
								},
								{
									"fileName": "src/profiles/profileSchemas/creativework.ts",
									"line": 11,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1477,
							"name": "@type",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1478,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profile.ts",
											"line": 13,
											"character": 19
										},
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 18,
											"character": 19
										},
										{
											"fileName": "src/profiles/profileSchemas/organization.ts",
											"line": 12,
											"character": 19
										},
										{
											"fileName": "src/profiles/profileSchemas/creativework.ts",
											"line": 10,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"string\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1478
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profile.ts",
									"line": 13,
									"character": 11
								},
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 18,
									"character": 11
								},
								{
									"fileName": "src/profiles/profileSchemas/organization.ts",
									"line": 12,
									"character": 11
								},
								{
									"fileName": "src/profiles/profileSchemas/creativework.ts",
									"line": 10,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1652,
							"name": "account",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1654,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 49,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1653,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 48,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"array\""
								},
								{
									"id": 1655,
									"name": "items",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 1656,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 51,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"object\""
										},
										{
											"id": 1657,
											"name": "properties",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1658,
													"name": "@type",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1659,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 53,
																	"character": 25
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1659
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 53,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1663,
													"name": "identifier",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1665,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 55,
																	"character": 48
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1664,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 55,
																	"character": 28
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1665,
																1664
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 55,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1672,
													"name": "proofMessage",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1674,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 58,
																	"character": 50
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1673,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 58,
																	"character": 30
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1674,
																1673
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 58,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1675,
													"name": "proofSignature",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1677,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 59,
																	"character": 52
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1676,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 59,
																	"character": 32
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1677,
																1676
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 59,
															"character": 24
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1666,
													"name": "proofType",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1668,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 56,
																	"character": 47
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1667,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 56,
																	"character": 27
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1668,
																1667
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 56,
															"character": 19
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1669,
													"name": "proofUrl",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1671,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 57,
																	"character": 46
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1670,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 57,
																	"character": 26
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1671,
																1670
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 57,
															"character": 18
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1660,
													"name": "service",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1662,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 54,
																	"character": 45
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1661,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 54,
																	"character": 25
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1662,
																1661
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 54,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														1658,
														1663,
														1672,
														1675,
														1666,
														1669,
														1660
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 52,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1656
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1657
											]
										}
									],
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 50,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1654,
										1653
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1655
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 47,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1700,
							"name": "address",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1702,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 87,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1701,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 86,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"object\""
								},
								{
									"id": 1703,
									"name": "properties",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 1704,
											"name": "@type",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1705,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 89,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"string\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1705
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 89,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1715,
											"name": "addressCountry",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1717,
													"name": "optional",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 93,
															"character": 50
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 1716,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 93,
															"character": 30
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"string\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1717,
														1716
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 93,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1709,
											"name": "addressLocality",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1711,
													"name": "optional",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 91,
															"character": 51
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 1710,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 91,
															"character": 31
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"string\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1711,
														1710
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 91,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1712,
											"name": "postalCode",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1714,
													"name": "optional",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 92,
															"character": 46
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 1713,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 92,
															"character": 26
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"string\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1714,
														1713
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 92,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1706,
											"name": "streetAddress",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1708,
													"name": "optional",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 90,
															"character": 49
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 1707,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 90,
															"character": 29
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"string\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1708,
														1707
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 90,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1704,
												1715,
												1709,
												1712,
												1706
											]
										}
									],
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 88,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1702,
										1701
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1703
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 85,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1718,
							"name": "birthDate",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1720,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 96,
											"character": 41
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1719,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 96,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"string\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1720,
										1719
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 96,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1624,
							"name": "description",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1626,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 23,
											"character": 43
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1625,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 23,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"string\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1626,
										1625
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 23,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1621,
							"name": "familyName",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1623,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 22,
											"character": 42
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1622,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 22,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"string\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1623,
										1622
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1618,
							"name": "givenName",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1620,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 21,
											"character": 41
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1619,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 21,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"string\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1620,
										1619
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 21,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1627,
							"name": "image",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1629,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 26,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1628,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 25,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"array\""
								},
								{
									"id": 1630,
									"name": "items",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 1631,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 28,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"object\""
										},
										{
											"id": 1632,
											"name": "properties",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1633,
													"name": "@type",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1634,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 30,
																	"character": 25
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1634
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 30,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1638,
													"name": "contentUrl",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1640,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 32,
																	"character": 48
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1639,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 32,
																	"character": 28
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1640,
																1639
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 32,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1635,
													"name": "name",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1637,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 31,
																	"character": 42
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1636,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 31,
																	"character": 22
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1637,
																1636
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 31,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														1633,
														1638,
														1635
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 29,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1631
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1632
											]
										}
									],
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 27,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1629,
										1628
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1630
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 24,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1689,
							"name": "knows",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1691,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 76,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1690,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 75,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"array\""
								},
								{
									"id": 1692,
									"name": "items",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 1693,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 78,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"object\""
										},
										{
											"id": 1694,
											"name": "properties",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1697,
													"name": "@id",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1699,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 81,
																	"character": 43
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1698,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 81,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1699,
																1698
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 81,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1695,
													"name": "@type",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1696,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 80,
																	"character": 25
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1696
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 80,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														1697,
														1695
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 79,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1693
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1694
											]
										}
									],
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 77,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1691,
										1690
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1692
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 74,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1615,
							"name": "name",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1617,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 20,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1616,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 20,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"string\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1617,
										1616
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1721,
							"name": "taxID",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1723,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 97,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1722,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 97,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"string\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1723,
										1722
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 97,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1641,
							"name": "website",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1643,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 38,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1642,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 37,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"array\""
								},
								{
									"id": 1644,
									"name": "items",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 1645,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 40,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"object\""
										},
										{
											"id": 1646,
											"name": "properties",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1647,
													"name": "@type",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1648,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 42,
																	"character": 25
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1648
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 42,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1649,
													"name": "url",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1651,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 43,
																	"character": 41
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1650,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 43,
																	"character": 21
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1651,
																1650
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 43,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														1647,
														1649
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 41,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1645
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1646
											]
										}
									],
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 39,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1643,
										1642
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1644
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 36,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1678,
							"name": "worksFor",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1680,
									"name": "optional",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 65,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 1679,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 64,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"array\""
								},
								{
									"id": 1681,
									"name": "items",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 1682,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 67,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"object\""
										},
										{
											"id": 1683,
											"name": "properties",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {},
											"children": [
												{
													"id": 1686,
													"name": "@id",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1688,
															"name": "optional",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 70,
																	"character": 43
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 1687,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 70,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1688,
																1687
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 70,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1684,
													"name": "@type",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 1685,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/profiles/profileSchemas/person.ts",
																	"line": 69,
																	"character": 25
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"string\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1685
															]
														}
													],
													"sources": [
														{
															"fileName": "src/profiles/profileSchemas/person.ts",
															"line": 69,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														1686,
														1684
													]
												}
											],
											"sources": [
												{
													"fileName": "src/profiles/profileSchemas/person.ts",
													"line": 68,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1682
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1683
											]
										}
									],
									"sources": [
										{
											"fileName": "src/profiles/profileSchemas/person.ts",
											"line": 66,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1680,
										1679
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1681
									]
								}
							],
							"sources": [
								{
									"fileName": "src/profiles/profileSchemas/person.ts",
									"line": 63,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1474,
								1612,
								1477,
								1652,
								1700,
								1718,
								1624,
								1621,
								1618,
								1627,
								1689,
								1615,
								1721,
								1641,
								1678
							]
						}
					],
					"sources": [
						{
							"fileName": "src/profiles/profile.ts",
							"line": 11,
							"character": 12
						},
						{
							"fileName": "src/profiles/profileSchemas/person.ts",
							"line": 16,
							"character": 12
						},
						{
							"fileName": "src/profiles/profileSchemas/organization.ts",
							"line": 10,
							"character": 12
						},
						{
							"fileName": "src/profiles/profileSchemas/creativework.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1611,
						1472
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1473
					]
				}
			],
			"sources": [
				{
					"fileName": "src/profiles/profile.ts",
					"line": 9,
					"character": 22
				},
				{
					"fileName": "src/profiles/profileSchemas/person.ts",
					"line": 13,
					"character": 22
				},
				{
					"fileName": "src/profiles/profileSchemas/organization.ts",
					"line": 8,
					"character": 22
				},
				{
					"fileName": "src/profiles/profileSchemas/creativework.ts",
					"line": 6,
					"character": 22
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 2628,
			"name": "transactions",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 2642,
					"name": "BlockstackNamespace",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1204,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockstackNamespace"
					}
				},
				{
					"id": 2653,
					"name": "estimateAnnounce",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1215,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateAnnounce",
						"id": 2527
					}
				},
				{
					"id": 2652,
					"name": "estimateNameImport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1214,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateNameImport",
						"id": 2521
					}
				},
				{
					"id": 2649,
					"name": "estimateNamespacePreorder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1211,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateNamespacePreorder",
						"id": 2505
					}
				},
				{
					"id": 2651,
					"name": "estimateNamespaceReady",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1213,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateNamespaceReady",
						"id": 2517
					}
				},
				{
					"id": 2650,
					"name": "estimateNamespaceReveal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1212,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateNamespaceReveal",
						"id": 2511
					}
				},
				{
					"id": 2643,
					"name": "estimatePreorder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1205,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "estimatePreorder",
						"id": 2465
					}
				},
				{
					"id": 2644,
					"name": "estimateRegister",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1206,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateRegister",
						"id": 2471
					}
				},
				{
					"id": 2647,
					"name": "estimateRenewal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1209,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateRenewal",
						"id": 2491
					}
				},
				{
					"id": 2648,
					"name": "estimateRevoke",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1210,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateRevoke",
						"id": 2499
					}
				},
				{
					"id": 2654,
					"name": "estimateTokenTransfer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1216,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateTokenTransfer",
						"id": 2531
					}
				},
				{
					"id": 2645,
					"name": "estimateTransfer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1207,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateTransfer",
						"id": 2484
					}
				},
				{
					"id": 2646,
					"name": "estimateUpdate",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1208,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "estimateUpdate",
						"id": 2478
					}
				},
				{
					"id": 2640,
					"name": "makeAnnounce",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1202,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "makeAnnounce",
						"id": 2608
					}
				},
				{
					"id": 2638,
					"name": "makeBitcoinSpend",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1200,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "makeBitcoinSpend",
						"id": 2622
					}
				},
				{
					"id": 2639,
					"name": "makeNameImport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1201,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "makeNameImport",
						"id": 2601
					}
				},
				{
					"id": 2635,
					"name": "makeNamespacePreorder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1197,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "makeNamespacePreorder"
					}
				},
				{
					"id": 2637,
					"name": "makeNamespaceReady",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1199,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "makeNamespaceReady",
						"id": 2596
					}
				},
				{
					"id": 2636,
					"name": "makeNamespaceReveal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1198,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "makeNamespaceReveal",
						"id": 2590
					}
				},
				{
					"id": 2631,
					"name": "makePreorder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1193,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "makePreorder",
						"id": 2539
					}
				},
				{
					"id": 2632,
					"name": "makeRegister",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1194,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "makeRegister",
						"id": 2553
					}
				},
				{
					"id": 2629,
					"name": "makeRenewal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1191,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "makeRenewal",
						"id": 2575
					}
				},
				{
					"id": 2634,
					"name": "makeRevoke",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1196,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "makeRevoke",
						"id": 2569
					}
				},
				{
					"id": 2641,
					"name": "makeTokenTransfer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1203,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "makeTokenTransfer",
						"id": 2613
					}
				},
				{
					"id": 2633,
					"name": "makeTransfer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1195,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "makeTransfer",
						"id": 2561
					}
				},
				{
					"id": 2630,
					"name": "makeUpdate",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/operations/txbuild.ts",
							"line": 1192,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "makeUpdate",
						"id": 2545
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2642,
						2653,
						2652,
						2649,
						2651,
						2650,
						2643,
						2644,
						2647,
						2648,
						2654,
						2645,
						2646,
						2640,
						2638,
						2639,
						2635,
						2637,
						2636,
						2631,
						2632,
						2629,
						2634,
						2641,
						2633,
						2630
					]
				}
			],
			"sources": [
				{
					"fileName": "src/operations/txbuild.ts",
					"line": 1190,
					"character": 25
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				1
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				888,
				408,
				1252,
				1280,
				1364,
				1336,
				1392,
				999,
				965,
				2099,
				369,
				334,
				2139,
				1438,
				365,
				1159,
				1308,
				1889,
				1018,
				974,
				2123,
				2111,
				343
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				1427,
				390,
				986,
				1743,
				1739,
				776,
				1758,
				1754,
				821,
				960,
				159,
				302,
				2091,
				387,
				1748,
				361,
				1133,
				329,
				392,
				382,
				782,
				2026,
				299
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				2365,
				2360,
				2361,
				1973,
				1251,
				1037,
				752,
				1035,
				1036,
				352,
				983,
				2136,
				2135,
				315,
				2276
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				2784,
				2011,
				2789,
				2787,
				2788,
				2786,
				2791,
				7,
				2010,
				2790,
				2009,
				2785,
				707,
				314,
				702,
				1158,
				1780,
				704,
				705,
				703,
				2271,
				2272,
				2273,
				2274,
				2275,
				1972,
				2439,
				2440,
				1040,
				1776,
				748,
				744,
				743
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				1038,
				377,
				984,
				2137,
				353,
				1792,
				1860,
				794,
				1787,
				2527,
				2521,
				2505,
				2517,
				2511,
				2465,
				2471,
				2491,
				2499,
				2531,
				2484,
				2478,
				1213,
				857,
				1867,
				2051,
				837,
				883,
				327,
				1845,
				1823,
				1831,
				1818,
				1799,
				880,
				1506,
				708,
				2012,
				2294,
				1781,
				2063,
				1836,
				379,
				355,
				358,
				2281,
				307,
				1851,
				2049,
				305,
				2042,
				2017,
				1882,
				2053,
				1735,
				2608,
				1979,
				2622,
				2601,
				2596,
				2590,
				2539,
				2553,
				2575,
				2569,
				2613,
				2561,
				2545,
				2284,
				1854,
				2044,
				2059,
				2315,
				1194,
				2055,
				2287,
				1432,
				1209,
				1203
			]
		},
		{
			"title": "Object literals",
			"kind": 2097152,
			"children": [
				2039,
				1471,
				2628
			]
		}
	]
}