import { Atom } from "./atom";
import { AtomConstructorOptions } from "./internal-types";
/** @ignore */
export declare function _useNextAtomId(): number;
/** @ignore */
export declare function _getState<S>(atom: Atom<S>): S;
/** @ignore */
export declare function _setState<S>(atom: Atom<S>, state: S): void;
/** @ignore */
export declare function _getValidator<S>(atom: Atom<S>): NonNullable<AtomConstructorOptions<S>["validator"]>;
/** @ignore */
export declare function _setValidator<S>(atom: Atom<S>, validator: NonNullable<AtomConstructorOptions<S>["validator"]>): void;
/** @ignore */
export declare function _initChangeHandlerDict(atom: Atom<any>): void;
/** @ignore */
export declare function _addChangeHandler<S>(atom: Atom<S>, key: string, handler: (states: {
    previous: S;
    current: S;
}) => void): void;
/** @ignore */
export declare function _removeChangeHandler<S>(atom: Atom<S>, key: string): void;
/** @ignore */
export declare function _runChangeHandlers<S>(atom: Atom<S>, previous: S, current: S): void;
