{"version":3,"sources":["webpack://reactAtom/webpack/universalModuleDefinition","webpack://reactAtom/webpack/bootstrap","webpack://reactAtom/external \"@libre/atom\"","webpack://reactAtom/./src/react-atom.ts","webpack://reactAtom/./src/react-atom-internal.ts","webpack://reactAtom/external \"react\"","webpack://reactAtom/./src/error-messages.ts","webpack://reactAtom/./src/utils.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","initialize","useAtom","initializationCount","hookIdTicker","hooks","useLayoutEffect","useMemo","useState","Atom","addChangeHandler","deref","getValidator","removeChangeHandler","set","setValidator","swap","atom","options","arg","JSON","stringify","TypeError","ErrorMsgs","calledUseAtomWithNonAtom","hook","select","atomValue","selector","a","memoLast","err","calledUseAtomOutsideFunctionComponent","idKey","previous","current","isShallowEqual","Error","multipleInstantiations","internalUseAtom","calledDerefWithNonAtom","Object_is","x","y","isPOJO","obj","proto","getPrototypeOf","b","every","Array","isArray","keys","length","k","fn","cachedArg","cachedVal"],"mappings":"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","file":"react-atom.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"reactAtom\"] = factory();\n\telse\n\t\troot[\"reactAtom\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"@libre/atom\");","export * from \"@libre/atom\";\nexport { initialize, useAtom } from \"./react-atom-internal\";\nexport * from \"./internal-types\";\n","/**\n * `react-atom` is a _lightweight_ abstraction around React's proposed Hooks API\n * that provides the ability to ___share and update state across function\n * components___. It offers a very simple and straightforward approach to managing\n * state, whether local component state, or shared application state.\n */\nimport {\n  addChangeHandler,\n  Atom,\n  DeepImmutable,\n  deref,\n  getValidator,\n  removeChangeHandler,\n  set,\n  setValidator,\n  swap\n} from \"@libre/atom\";\nimport { SetStateAction, useLayoutEffect, useMemo, useState } from \"react\";\n\nimport * as ErrorMsgs from \"./error-messages\";\nimport { HookDependencies, PublicExports, ReactUseStateHook, UseAtomOptions } from \"./internal-types\";\nimport { isShallowEqual, memoLast } from \"./utils\";\n\n// ------------------------------------------------------------------------------------------ //\n// ---------------------------------- INTERNAL STATE ---------------------------------------- //\n// ------------------------------------------------------------------------------------------ //\n\nlet initializationCount = 0;\nlet hookIdTicker = 0;\n\n// ------------------------------------------------------------------------------------------ //\n// -------------------------------------- PUBLIC API ---------------------------------------- //\n// ------------------------------------------------------------------------------------------ //\n\n/**\n * **NOTE: This is a back door for users of `react` prior to hooks**\n *\n * Initializes `react-atom` with the provided [[HookDependencies]] and\n * returns the full public API of `react-atom`.\n *\n * By default, react-atom imports the [[HookDependencies]] from the\n * version of `react` you've installed, but `initialize` provides you\n * the option to use a different implementation of hooks. For example,\n * if you're using a version of `react` prior to the release of hooks,\n * you might like to use a poly/ponyfill like [react-with-hooks](https://github.com/yesmeck/react-with-hooks).\n *\n * If you use `initialize`, you need to be careful to avoid importing\n * `useAtom` and co. from `react-atom` and make sure to only use the\n * instances returned by `initialize` throughout your application.\n *\n * @example\n * ```jsx\n *\n * import {useLayoutEffect, useMemo, useState} from 'alt-hooks'\n * import { initialize } from '@dbeining/react-atom';\n *\n * export const {Atom, deref, set, swap, useAtom} = initialize({\n *  useLayoutEffect,\n *  useMemo,\n *  useState,\n * });\n * ```\n */\nexport function initialize(hooks: HookDependencies): PublicExports {\n  const { useLayoutEffect, useMemo, useState } = hooks;\n  initializationCount = initializationCount + 1;\n  /* instanbul ignore next */\n  function useAtom<S, R>(atom: Atom<S>, options?: UseAtomOptions<S, R>): DeepImmutable<R> {\n    if (!(atom instanceof Atom)) {\n      const arg = JSON.stringify(atom, null, \"  \");\n      throw TypeError(`${ErrorMsgs.calledUseAtomWithNonAtom}\\n${arg}`);\n    }\n\n    const { select } = options || { select: null };\n    const atomValue = deref(atom) as S;\n    let selector: NonNullable<typeof select> = select ? select : (a: S) => (a as unknown) as R;\n    let hook: ReactUseStateHook<S | R>;\n    try {\n      selector = useMemo(() => memoLast(selector), [select]);\n      [, hook] = useState({}) as [{}, ReactUseStateHook<S | R>];\n    } catch (err) {\n      throw new TypeError(ErrorMsgs.calledUseAtomOutsideFunctionComponent);\n    }\n\n    useLayoutEffect(\n      () => {\n        const idKey = hook[\"@@react-atom/hook_id\"] ? hook[\"@@react-atom/hook_id\"] : `hook#${++hookIdTicker}`;\n        hook[\"@@react-atom/hook_id\"] = idKey;\n        addChangeHandler(atom, hook[\"@@react-atom/hook_id\"], ({ previous, current }) => {\n          if (!isShallowEqual(selector(previous), selector(current))) {\n            hook({} as SetStateAction<S | R>);\n          }\n        });\n\n        return function unhook() {\n          removeChangeHandler(atom, hook[\"@@react-atom/hook_id\"] as string);\n        };\n      },\n      [hook, select]\n    );\n\n    return selector(atomValue) as DeepImmutable<R>;\n  }\n\n  return {\n    Atom,\n    addChangeHandler,\n    deref,\n    getValidator,\n    removeChangeHandler,\n    set,\n    setValidator,\n    swap,\n    useAtom\n  };\n}\n\n// ======================================= USEATOM ==============================================\n//\n// tslint:disable:max-line-length\n\n/**\n * #### **Important:** _`useAtom` is a React Hook and must follow the [Rules of Hooks](https://github.com/reactjs/reactjs.org/blob/f203cd5d86c4c611a31a4f72c5a91e2db0858ce3/content/docs/hooks-rules.md)_\n *\n * Reads the current state of an [[Atom]] and subscribes the currently\n * rendering function component to the [[Atom]]'s state such that, when the\n * [[Atom]]'s state changes, the component will automatically re-render to\n * read the new state. The subscription is removed when the component unmounts.\n *\n * @param S the type of the internal state of the [[Atom]]\n * @returns the internal state of the [[Atom]]\n *\n * @example\n * ```jsx\n *\n *import {Atom, useAtom} from '@dbeining/react-atom'\n *\n *const stateAtom = Atom.of({ count: 0 })\n *\n *function MyComponent() {\n *  const {count} = useAtom(stateAtom)\n *  return <p>The count is {count}</p>\n *}\n * ```\n */\n\nexport function useAtom<S>(atom: Atom<S>): DeepImmutable<S>;\n\n/**\n * #### **Important:** _`useAtom` is a React Hook and must follow the [Rules of Hooks](https://github.com/reactjs/reactjs.org/blob/f203cd5d86c4c611a31a4f72c5a91e2db0858ce3/content/docs/hooks-rules.md)_\n *\n * [[useAtom]] enhanced with `options`.\n *\n * Reads the current state of an [[Atom]] and subscribes the currently\n * rendering function component to the [[Atom]]'s state such that, when the\n * [[Atom]]'s state changes, the component will automatically re-render to\n * read the new state. The subscription is removed when the component unmounts.\n *\n * @tip if `options.select` is an expensive computation, it should be memoized\n *\n * @param S the type of the internal state of the [[Atom]]\n * @param R the type of the return value of [[useAtom]] computed via `options.select`\n * @param options.select a pure function applied to the Atom's state to compute the value you want [[useAtom]] to return. If provided, **the component will only re-render when the value returned from `options.select` has changed**, as determined by a strict equality check for primitive/scalar values, or, for objects, a shallow strict equality comparison of own properties.\n * @returns the value returned from applying `options.select` to `S`\n * @example\n *```jsx\n *\n *import { Atom, useAtom } from '@dbeining/react-atom'\n *import { Orders } from 'elsewhere'\n *\n *const stateAtom = Atom.of({ orders: [...Orders] })\n *\n *function MyComponent() {\n *  const orderCount = useAtom(stateAtom, {\n *    select: (s) => s.orders.length\n *  })\n *\n *  return <p>There are {orderCount} orders</p>\n *}\n *```\n */\nexport function useAtom<S, R>(atom: Atom<S>, options: UseAtomOptions<S, R>): DeepImmutable<R>;\nexport function useAtom<S, R>(atom: Atom<S>, options?: UseAtomOptions<S, R>) {\n  if (initializationCount > 1) throw Error(ErrorMsgs.multipleInstantiations);\n  const { select } = options || { select: null };\n  return select ? internalUseAtom(atom, { select }) : internalUseAtom(atom);\n}\n\n/**\n * default instance of useAtom\n */\nconst internalUseAtom = initialize({ useLayoutEffect, useMemo, useState }).useAtom;\n","module.exports = require(\"react\");","/** @ignore */\nexport const calledUseAtomOutsideFunctionComponent =\n  \"useAtom can only be called inside the body of a function component\";\n\n/** @ignore */\nexport const calledUseAtomWithNonAtom = \"useAtom only accepts `react-atom` Atoms, but got:\";\n\n/** @ignore */\nexport const calledDerefWithNonAtom = \"deref only accepts `react-atom` Atoms, but got:\";\n\n/** @ignore */\nexport const multipleInstantiations = `Multiple instances of react-atom have been detected, which will lead to unexpected bugs in the useAtom custom hook. This usually means react-atom has been initialized with \\`initialize(hooks)\\` in addition to importing the default Atom, useAtom, etc. directly. To avoid this error, only use the implementation returned from \\`initialize\\`.`;\n","/** @ignore */\nfunction Object_is(x: any, y: any): boolean {\n  return x === y ? x !== 0 || 1 / x === 1 / y : x !== x && y !== y;\n}\n/** @ignore */\nexport function isPOJO(obj: unknown): obj is Record<string, unknown> {\n  if (typeof obj !== \"object\" || obj === null) return false;\n  const proto = Object.getPrototypeOf(obj);\n  return proto === Object.prototype || proto === null;\n}\n\n/** @ignore */\nexport function isShallowEqual<A, B extends Record<string, unknown>, C extends A | B>(a: A, b: C): boolean {\n  if ([a, b].every(isPOJO) || [a, b].every(Array.isArray)) {\n    if (Object_is(a, b)) return true;\n    if (Object.keys(a).length !== Object.keys(b).length) return false;\n    for (const k in a) if (!Object_is(a[k], b[k])) return false;\n    return true;\n  }\n\n  return Object_is(a, b);\n}\n\n/** @ignore */\nexport function memoLast<A, B>(fn: (arg: A) => B) {\n  let cachedArg: A;\n  let cachedVal: B;\n  return function memoized(arg: A): B {\n    if (!Object_is(cachedArg, arg)) {\n      cachedArg = arg;\n      cachedVal = fn(arg);\n    }\n    return cachedVal;\n  };\n}\n"],"sourceRoot":""}